<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Apq</name>
    </assembly>
    <members>
        <member name="T:Apq.XSD.Explorer">
             <summary>
            Represents a strongly typed in-memory cache of data.
            </summary>
            <summary>
            资源管理器
            </summary>
        </member>
        <member name="M:Apq.XSD.Explorer.Init_luType">
            <summary>
            初始化类型查找表
            </summary>
        </member>
        <member name="T:Apq.XSD.Explorer.dtExplorerDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Apq.XSD.Explorer.luTypeDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Apq.XSD.Explorer.dtExplorerRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Apq.XSD.Explorer.luTypeRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Apq.XSD.Explorer.dtExplorerRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Apq.XSD.Explorer.luTypeRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Apq.Data.DataTable">
            <summary>
            DataTable
            </summary>
        </member>
        <member name="M:Apq.Data.DataTable.#ctor(System.Data.DataTable)">
            <summary>
            装饰
            </summary>
        </member>
        <member name="M:Apq.Data.DataTable.GetColNames(System.Data.DataTable)">
            <summary>
            获取列名数组
            </summary>
            <param name="dt">表</param>
            <returns></returns>
        </member>
        <member name="M:Apq.Data.DataTable.GetColNames">
            <summary>
            获取列名数组
            </summary>
            <returns></returns>
        </member>
        <member name="M:Apq.Data.DataTable.GetDistinct(System.Data.DataTable,System.String[])">
            <summary>
            获取不重复列表
            </summary>
            <param name="dtSrc">源表</param>
            <param name="DataColumnNames">列名列表</param>
            <returns></returns>
        </member>
        <member name="M:Apq.Data.DataTable.GetDistinct(System.String[])">
            <summary>
            获取不重复列表
            </summary>
            <param name="DataColumnNames">列名列表</param>
            <returns></returns>
        </member>
        <member name="M:Apq.Data.DataTable.CloneToStringTable(System.Data.DataTable)">
            <summary>
            创建一个与源表 列名相同，列类型为字符串 的空表
            </summary>
            <param name="dtSrc">源表</param>
        </member>
        <member name="M:Apq.Data.DataTable.CloneToStringTable">
            <summary>
            创建一个与源表 列名相同，列类型为字符串 的空表
            </summary>
        </member>
        <member name="M:Apq.Data.DataTable.ConvertTreeXmlNode(System.Data.DataTable,System.String[],System.String,System.String,System.Xml.XmlNode,System.String,System.String)">
            <summary>
            将表转换到 XmlNode(树)
            </summary>
            <param name="dt">表</param>
            <param name="Columns">需要的列名列表</param>
            <param name="Key">主键列名(一列)</param>
            <param name="Parent">上级列名(一列)</param>
            <param name="xn">XmlNode</param>
            <param name="tag">结点名</param>
            <param name="ChildrenFilter">子行筛选</param>
        </member>
        <member name="M:Apq.Data.DataTable.LoadTreeXmlNode(System.Data.DataTable,System.String[],System.Xml.XmlNode)">
            <summary>
            从 XmlNode(树) 加载表
            </summary>
            <param name="dt">表</param>
            <param name="Columns">需要的列名列表</param>
            <param name="xn">XmlNode</param>
        </member>
        <member name="M:Apq.Data.DataTable.ConvertTreeXmlNode(System.String[],System.String,System.String,System.Xml.XmlNode,System.String,System.String)">
            <summary>
            将表转换到 XmlNode(树)
            </summary>
            <param name="Columns">需要的列名列表</param>
            <param name="Key">主键列名(一列)</param>
            <param name="Parent">上级列名(一列)</param>
            <param name="xn">XmlNode</param>
            <param name="tag">结点名</param>
            <param name="ChildrenFilter">子行筛选</param>
        </member>
        <member name="M:Apq.Data.DataTable.LoadTreeXmlNode(System.String[],System.Xml.XmlNode)">
            <summary>
            从 XmlNode(树) 加载表
            </summary>
            <param name="Columns">需要的列名列表</param>
            <param name="xn">XmlNode</param>
        </member>
        <member name="M:Apq.Data.DataTable.BuildExcelSheet(System.Data.OleDb.OleDbConnection,System.Data.Common.DataTableMapping)">
            <summary>
            在 Excel 文件中添加该表映射的页(Worksheet)和列.(对已存在的页则清空原数据)
            </summary>
            <param name="odc">已打开的连接</param>
            <param name="dtm">该表的映射关系</param>
        </member>
        <member name="M:Apq.Data.DataTable.ExportToExcel(System.Data.DataTable,System.Data.OleDb.OleDbConnection,System.Data.Common.DataColumnMappingCollection)">
            <summary>
            导出到 Excel 文件
            </summary>
            <param name="dt">表</param>
            <param name="odc"></param>
            <param name="dcmc">列映射</param>
        </member>
        <member name="M:Apq.Data.DataTable.ExportToExcel(System.Data.DataTable,System.Data.OleDb.OleDbConnection)">
            <summary>
            导出到 Excel 文件
            </summary>
            <param name="dt">表</param>
            <param name="odc"></param>
        </member>
        <member name="M:Apq.Data.DataTable.ExportToExcel(System.Data.OleDb.OleDbConnection,System.Data.Common.DataColumnMappingCollection)">
            <summary>
            导出到 Excel 文件
            </summary>
            <param name="odc"></param>
            <param name="dcmc">列映射</param>
        </member>
        <member name="M:Apq.Data.DataTable.ExportToExcel(System.Data.OleDb.OleDbConnection)">
            <summary>
            导出到 Excel 文件
            </summary>
            <param name="odc"></param>
        </member>
        <member name="M:Apq.Data.DataTable.ExportToText(System.Data.DataTable,System.String,System.String,System.String,System.Boolean)">
            <summary>
            导出到文本文件
            </summary>
            <param name="dt">表</param>
            <param name="FileName"></param>
            <param name="strColSpliter">列分隔符</param>
            <param name="strRowSpliter">行分隔符</param>
            <param name="ContainsColName">是否包含列名</param>
        </member>
        <member name="M:Apq.Data.DataTable.ExportToText(System.Data.DataTable,System.String,System.String,System.String)">
            <summary>
            导出到文本文件
            </summary>
            <param name="dt">表</param>
            <param name="FileName"></param>
            <param name="strColSpliter">列分隔符</param>
            <param name="strRowSpliter">行分隔符</param>
        </member>
        <member name="M:Apq.Data.DataTable.ExportToText(System.String,System.String,System.String,System.Boolean)">
            <summary>
            导出到文本文件
            </summary>
            <param name="FileName"></param>
            <param name="strColSpliter">列分隔符</param>
            <param name="strRowSpliter">行分隔符</param>
            <param name="ContainsColName">是否包含列名</param>
        </member>
        <member name="M:Apq.Data.DataTable.ExportToText(System.String,System.String,System.String)">
            <summary>
            导出到文本文件
            </summary>
            <param name="FileName"></param>
            <param name="strColSpliter">列分隔符</param>
            <param name="strRowSpliter">行分隔符</param>
        </member>
        <member name="P:Apq.Data.DataTable.Table">
            <summary>
            获取表
            </summary>
        </member>
        <member name="T:Apq.Data.Common.DbConnectionHelper">
            <summary>
            DbConnectionHelper
            </summary>
        </member>
        <member name="M:Apq.Data.Common.DbConnectionHelper.Open(System.Data.Common.DbConnection)">
            <summary>
            [可重入]打开连接
            </summary>
            <param name="Connection"></param>
        </member>
        <member name="M:Apq.Data.Common.DbConnectionHelper.Close(System.Data.Common.DbConnection)">
            <summary>
            [可重入]关闭连接
            </summary>
            <param name="Connection"></param>
        </member>
        <member name="M:Apq.Data.Common.DbConnectionHelper.#ctor(System.Data.Common.DbConnection)">
            <summary>
            装饰
            </summary>
            <param name="Connection"></param>
        </member>
        <member name="M:Apq.Data.Common.DbConnectionHelper.Open">
            <summary>
            [可重入]打开连接
            </summary>
        </member>
        <member name="M:Apq.Data.Common.DbConnectionHelper.Close">
            <summary>
            [可重入]关闭连接
            </summary>
        </member>
        <member name="M:Apq.Data.Common.DbConnectionHelper.CreateAdapter">
            <summary>
            [反射]创建 DataAdapter
            </summary>
            <returns></returns>
        </member>
        <member name="P:Apq.Data.Common.DbConnectionHelper.Connection">
            <summary>
            DbConnection
            </summary>
        </member>
        <member name="T:Apq.Net.FtpClient">
            <summary>
            提供常用FTP操作(每个操作连接一次)
            </summary>
        </member>
        <member name="M:Apq.Net.FtpClient.#ctor(System.String,System.Int32,System.String,System.String,System.String)">
            <summary>
            设置FTP连接信息
            </summary>
            <param name="Server">FTP连接地址</param>
            <param name="FtpPort">FTP端口</param>
            <param name="FtpRemotePath">指定FTP连接成功后的当前目录, 如果不指定即默认为根目录</param>
            <param name="FtpU">用户名</param>
            <param name="FtpP">密码</param>
        </member>
        <member name="M:Apq.Net.FtpClient.Upload(System.String)">
            <summary>
            上传文件
            </summary>
        </member>
        <member name="M:Apq.Net.FtpClient.Download(System.String,System.String)">
            <summary>
            下载文件
            </summary>
        </member>
        <member name="M:Apq.Net.FtpClient.Delete(System.String)">
            <summary>
            删除文件
            </summary>
        </member>
        <member name="M:Apq.Net.FtpClient.GetFilesDetailList">
            <summary>
            获取当前目录下明细(包含文件和文件夹)
            </summary>
        </member>
        <member name="M:Apq.Net.FtpClient.GetFileList(System.String)">
            <summary>
            获取当前目录下文件列表(仅文件)
            </summary>
        </member>
        <member name="M:Apq.Net.FtpClient.GetDirectoryList">
            <summary>
            [未尝试]获取当前目录下所有的文件夹列表(仅文件夹)
            </summary>
        </member>
        <member name="M:Apq.Net.FtpClient.DirectoryExist(System.String)">
            <summary>
            [未尝试]判断当前目录下指定的子目录是否存在
            </summary>
            <param name="RemoteDirectoryName">指定的目录名</param>
        </member>
        <member name="M:Apq.Net.FtpClient.FileExist(System.String)">
            <summary>
            判断当前目录下指定的文件是否存在
            </summary>
            <param name="RemoteFileName">远程文件名</param>
        </member>
        <member name="M:Apq.Net.FtpClient.MakeDir(System.String)">
            <summary>
            创建文件夹
            </summary>
            <param name="dirName"></param>
        </member>
        <member name="M:Apq.Net.FtpClient.GetFileSize(System.String)">
            <summary>
            获取指定文件大小
            </summary>
        </member>
        <member name="M:Apq.Net.FtpClient.Rename(System.String,System.String)">
            <summary>
            改名
            </summary>
        </member>
        <member name="M:Apq.Net.FtpClient.MovieFile(System.String,System.String)">
            <summary>
            移动文件
            </summary>
        </member>
        <member name="M:Apq.Net.FtpClient.GotoDirectory(System.String,System.Boolean)">
            <summary>
            切换当前目录
            </summary>
            <param name="DirectoryName"></param>
            <param name="IsRoot">true 绝对路径   false 相对路径</param> 
        </member>
        <member name="T:Apq.Config.ApqConfigs">
            <summary>
            配置管理池
            </summary>
        </member>
        <member name="F:Apq.Config.ApqConfigs.XmlConfigExt">
            <summary>
            Xml 配置文件名后缀["apq"]
            </summary>
        </member>
        <member name="M:Apq.Config.ApqConfigs.GetXmlConfigFolder(System.Reflection.Assembly)">
            <summary>
            获取 Xml 配置文件夹
            </summary>
            <param name="Assembly">程序集</param>
            <returns></returns>
        </member>
        <member name="M:Apq.Config.ApqConfigs.GetAsmConfig(System.String,System.String,System.String)">
            <summary>
            [反射]获取一个程序集配置文件
            </summary>
            <param name="Path">配置文件的完整路径</param>
            <param name="Root"></param>
            <param name="ClsName"></param>
            <returns></returns>
        </member>
        <member name="M:Apq.Config.ApqConfigs.GetAsmConfig(System.String,System.String)">
            <summary>
            获取一个程序集配置文件(XmlConfig)
            </summary>
            <param name="Path">配置文件的完整路径</param>
            <param name="Root">Root</param>
            <returns></returns>
        </member>
        <member name="M:Apq.Config.ApqConfigs.GetAsmConfig(System.String)">
            <summary>
            获取一个程序集配置文件(XmlConfig)
            </summary>
            <param name="Path">配置文件的完整路径</param>
            <returns></returns>
        </member>
        <member name="M:Apq.Config.ApqConfigs.GetAsmConfig(System.Reflection.Assembly)">
            <summary>
            获取一个程序集的程序集配置文件(XmlConfig)
            </summary>
            <param name="Assembly">程序集</param>
            <returns></returns>
        </member>
        <member name="M:Apq.Config.ApqConfigs.SaveAllAsmConfig">
            <summary>
            保存所有程序集配置文件
            </summary>
        </member>
        <member name="M:Apq.Config.ApqConfigs.GetUserConfig(System.String,System.String,System.String)">
            <summary>
            [反射]获取一个用户配置文件
            </summary>
            <param name="Path">配置文件的完整路径</param>
            <param name="Root"></param>
            <param name="ClsName"></param>
            <returns></returns>
        </member>
        <member name="M:Apq.Config.ApqConfigs.GetUserConfig(System.String,System.String)">
            <summary>
            获取一个用户配置文件(XmlConfig)
            </summary>
            <param name="Path">配置文件的完整路径</param>
            <param name="Root">Root</param>
            <returns></returns>
        </member>
        <member name="M:Apq.Config.ApqConfigs.GetUserConfig(System.String)">
            <summary>
            获取一个用户配置文件(XmlConfig)
            </summary>
            <param name="Path">配置文件的完整路径</param>
            <returns></returns>
        </member>
        <member name="M:Apq.Config.ApqConfigs.GetUserConfig(System.Reflection.Assembly)">
            <summary>
            获取一个程序集的用户配置文件(XmlConfig)
            </summary>
            <param name="Assembly">程序集</param>
            <returns></returns>
        </member>
        <member name="M:Apq.Config.ApqConfigs.SaveAllUserConfig">
            <summary>
            保存所有用户配置文件
            </summary>
        </member>
        <member name="M:Apq.Config.ApqConfigs.SaveAll">
            <summary>
            保存所有配置文件
            </summary>
        </member>
        <member name="T:Apq.ConnectionStrings.Excel.OleDbConnection">
            <summary>
            OLEDB 连接字符串
            </summary>
        </member>
        <member name="F:Apq.ConnectionStrings.Excel.OleDbConnection.ConnectionStringFormat">
            <summary>
            带格式的连接字符串
            </summary>
        </member>
        <member name="M:Apq.ConnectionStrings.Excel.OleDbConnection.GetConnectionString(System.String)">
            <summary>
            获取连接字符串
            </summary>
            <param name="dataSource"></param>
            <returns></returns>
        </member>
        <member name="M:Apq.ConnectionStrings.Excel.OleDbConnection.GetConnectionString(System.String,System.String,System.String)">
            <summary>
            获取连接字符串
            </summary>
            <param name="dataSource"></param>
            <param name="HDR">首行是否为列名["Yes"]</param>
            <param name="IMEX">是否全以文本格式读取["1"]</param>
            <returns></returns>
        </member>
        <member name="T:Apq.Utils.VirtKeys">
            <summary>
            VirtKeys
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_LBUTTON">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_RBUTTON">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_CANCEL">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_MBUTTON">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_XBUTTON1">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_XBUTTON2">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_BACK">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_TAB">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_CLEAR">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_RETURN">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_SHIFT">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_CONTROL">
            <summary>
            CTRL
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_MENU">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_PAUSE">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_CAPITAL">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_KANA">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_HANGUEL">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_HANGUL">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_JUNJA">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_FINAL">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_HANJA">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_KANJI">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_ESCAPE">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_CONVERT">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_NONCONVERT">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_ACCEPT">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_MODECHANGE">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_SPACE">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_PRIOR">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_NEXT">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_END">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_HOME">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_LEFT">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_UP">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_RIGHT">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_DOWN">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_SELECT">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_PRINT">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_EXECUTE">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_SNAPSHOT">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_INSERT">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_DELETE">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_HELP">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_LWIN">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_RWIN">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_APPS">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_SLEEP">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_NUMPAD0">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_NUMPAD1">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_NUMPAD2">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_NUMPAD3">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_NUMPAD4">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_NUMPAD5">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_NUMPAD6">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_NUMPAD7">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_NUMPAD8">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_NUMPAD9">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_MULTIPLY">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_ADD">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_SEPARATOR">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_SUBTRACT">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_DECIMAL">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_DIVIDE">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_F1">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_F2">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_F3">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_F4">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_F5">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_F6">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_F7">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_F8">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_F9">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_F10">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_F11">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_F12">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_F13">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_F14">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_F15">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_F16">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_F17">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_F18">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_F19">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_F20">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_F21">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_F22">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_F23">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_F24">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_NUMLOCK">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_SCROLL">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_LSHIFT">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_RSHIFT">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_LCONTROL">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_RCONTROL">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_LMENU">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_RMENU">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_BROWSER_BACK">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_BROWSER_FORWARD">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_BROWSER_REFRESH">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_BROWSER_STOP">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_BROWSER_SEARCH">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_BROWSER_FAVORITES">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_BROWSER_HOME">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_VOLUME_MUTE">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_VOLUME_DOWN">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_VOLUME_UP">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_MEDIA_NEXT_TRACK">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_MEDIA_PREV_TRACK">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_MEDIA_STOP">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_MEDIA_PLAY_PAUSE">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_LAUNCH_MAIL">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_LAUNCH_MEDIA_SELECT">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_LAUNCH_APP1">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_LAUNCH_APP2">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_OEM_1">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_OEM_PLUS">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_OEM_COMMA">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_OEM_MINUS">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_OEM_PERIOD">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_OEM_2">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_OEM_3">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_OEM_4">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_OEM_5">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_OEM_6">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_OEM_7">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_OEM_8">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_OEM_102">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_PROCESSKEY">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_PACKET">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_ATTN">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_CRSEL">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_EXSEL">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_EREOF">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_PLAY">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_ZOOM">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_NONAME">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_PA1">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.VirtKeys.VK_OEM_CLEAR">
            <summary>
            
            </summary>
        </member>
        <member name="T:Apq.IO.FileSystem">
            <summary>
            FileSystem
            </summary>
        </member>
        <member name="M:Apq.IO.FileSystem.ReadFully(System.IO.Stream)">
            <summary>
            从流(长度未知)读取到数组
            </summary>
            <param name="stream"></param>
            <returns></returns>
        </member>
        <member name="M:Apq.IO.FileSystem.HasChildren(System.String)">
            <summary>
            返回指定目录是否具有下级
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Apq.IO.FileSystem.LoadLogicDrivers(System.Data.DataTable,System.Int64@)">
            <summary>
            [列表]加载磁盘
            </summary>
        </member>
        <member name="M:Apq.IO.FileSystem.LoadFolders(System.Data.DataTable,System.Int64@,System.Int64,System.Int32)">
            <summary>
            [列表]加载子级文件夹
            </summary>
        </member>
        <member name="M:Apq.IO.FileSystem.LoadFiles(System.Data.DataTable,System.Int64@,System.Int64,System.Int32)">
            <summary>
            [列表]加载子级文件
            </summary>
        </member>
        <member name="M:Apq.IO.FileSystem.LoadFolders(System.Data.DataTable,System.Int64@,System.Int64,System.Int32,System.String)">
            <summary>
            [列表]加载子级文件夹
            </summary>
        </member>
        <member name="M:Apq.IO.FileSystem.LoadFiles(System.Data.DataTable,System.Int64@,System.Int64,System.Int32,System.String)">
            <summary>
            [列表]加载子级文件
            </summary>
        </member>
        <member name="T:Apq.ConnectionStrings.Excel2007.OleDbConnection">
            <summary>
            OLEDB 连接字符串
            </summary>
        </member>
        <member name="F:Apq.ConnectionStrings.Excel2007.OleDbConnection.ConnectionStringFormat">
            <summary>
            带格式的连接字符串
            </summary>
        </member>
        <member name="M:Apq.ConnectionStrings.Excel2007.OleDbConnection.GetConnectionString(System.String)">
            <summary>
            获取连接字符串
            </summary>
            <param name="dataSource"></param>
            <returns></returns>
        </member>
        <member name="M:Apq.ConnectionStrings.Excel2007.OleDbConnection.GetConnectionString(System.String,System.String,System.String)">
            <summary>
            获取连接字符串
            </summary>
            <param name="dataSource"></param>
            <param name="HDR">首行是否为列名["Yes"]</param>
            <param name="IMEX">是否全以文本格式读取["0"]</param>
            <returns></returns>
        </member>
        <member name="T:Apq.SingletonInstances">
            <summary>
            SingletonInstances
            </summary>
        </member>
        <member name="M:Apq.SingletonInstances.GetInstance(System.Type)">
            <summary>
            获取单态实例
            </summary>
            <param name="t">实例类型</param>
            <returns></returns>
        </member>
        <member name="M:Apq.SingletonInstances.ReleaseInstance(System.Type)">
            <summary>
            释放单态实例
            </summary>
            <param name="t">实例类型</param>
        </member>
        <member name="T:Apq.Data.Dev.DataSet">
            <summary>
            DataSet
            </summary>
        </member>
        <member name="F:Apq.Data.Dev.DataSet.Connection">
            <summary>
            数据库连接
            </summary>
        </member>
        <member name="M:Apq.Data.Dev.DataSet.#ctor">
            <summary>
            须先设置 Connection
            </summary>
        </member>
        <member name="M:Apq.Data.Dev.DataSet.Refresh(System.String)">
            <summary>
            更新 Apq_Tables, Apq_Columns 表内容
            </summary>
            <param name="DBName">目标数据库名</param>
            <returns>影响行数</returns>
        </member>
        <member name="M:Apq.Data.Dev.DataSet.Fill(System.Data.DataSet)">
            <summary>
            填充 DataSet
            </summary>
            <param name="ds">目标 DataSet</param>
            <returns></returns>
        </member>
        <member name="P:Apq.Data.Dev.DataSet.Apq_Tables">
            <summary>
            获取存储表的表名("Apq_Tables")
            </summary>
        </member>
        <member name="P:Apq.Data.Dev.DataSet.Apq_Columns">
            <summary>
            获取存储列的表名("Apq_Columns")
            </summary>
        </member>
        <member name="T:Apq.Data.DataRow">
            <summary>
            DataRow
            </summary>
        </member>
        <member name="M:Apq.Data.DataRow.LikeDBNull(System.Data.DataRow)">
            <summary>
            返回一行是否全与 DBNull 具有相似意义
            </summary>
            <param name="dr"></param>
            <returns></returns>
        </member>
        <member name="M:Apq.Data.DataRow.Equals(System.Data.DataRow,System.Data.DataRow)">
            <summary>
            [反射]判断两行是否相等
            </summary>
            <param name="dr1"></param>
            <param name="dr2"></param>
            <returns></returns>
        </member>
        <member name="T:Apq.Locks">
            <summary>
            Locks
            </summary>
        </member>
        <member name="M:Apq.Locks.GetFileLock(System.String)">
            <summary>
            获取文件锁
            </summary>
            <param name="FullFileName">文件全名(含路径)</param>
            <returns></returns>
        </member>
        <member name="T:Apq.DllImports.Imm32">
            <summary>
            Imm32
            </summary>
        </member>
        <member name="F:Apq.DllImports.Imm32.IME_CMODE_FULLSHAPE">
            <summary>
            全角
            </summary>
        </member>
        <member name="F:Apq.DllImports.Imm32.IME_CHOTKEY_SHAPE_TOGGLE">
            <summary>
            半角
            </summary>
        </member>
        <member name="M:Apq.DllImports.Imm32.ImmGetOpenStatus(System.IntPtr)">
            <summary>
            获取输入法打开状态
            </summary>
            <param name="himc"></param>
            <returns></returns>
        </member>
        <member name="M:Apq.DllImports.Imm32.ImmSetOpenStatus(System.IntPtr,System.Boolean)">
            <summary>
            设置输入法打开状态
            </summary>
            <param name="himc"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:Apq.DllImports.Imm32.ImmGetContext(System.IntPtr)">
            <summary>
            获取输入法句柄
            </summary>
            <param name="hwnd"></param>
            <returns></returns>
        </member>
        <member name="M:Apq.DllImports.Imm32.ImmGetConversionStatus(System.IntPtr,System.Int32@,System.Int32@)">
            <summary>
            检索输入法信息
            </summary>
            <param name="himc"></param>
            <param name="lpdw"></param>
            <param name="lpdw2"></param>
            <returns></returns>
        </member>
        <member name="M:Apq.DllImports.Imm32.ImmSimulateHotKey(System.IntPtr,System.Int32)">
            <summary>
            模拟按键(用于转换半角)
            </summary>
            <param name="hwnd"></param>
            <param name="lngHotkey"></param>
            <returns></returns>
        </member>
        <member name="T:Apq.Security.Cryptography.SymmetricAlgorithmHelper">
            <summary>
            对称算法助手
            </summary>
        </member>
        <member name="F:Apq.Security.Cryptography.SymmetricAlgorithmHelper.FileReadStep">
            <summary>
            文件操作时单次读取的最大字节数
            </summary>
        </member>
        <member name="M:Apq.Security.Cryptography.SymmetricAlgorithmHelper.FormatKey(System.Byte[],System.Int32)">
            <summary>
            格式化密钥,跳过全0字节,不足时补入0xFF
            </summary>
            <param name="desKey">密钥</param>
            <param name="Size">返回的位长度(实际按字节处理,所以应为8的倍数)</param>
            <returns></returns>
        </member>
        <member name="M:Apq.Security.Cryptography.SymmetricAlgorithmHelper.EncryptFile(System.String,System.String,System.Security.Cryptography.SymmetricAlgorithm)">
            <summary>
            加密文件
            </summary>
            <param name="inName">来源文件</param>
            <param name="outName">输出文件</param>
            <param name="Algorithm">对称算法</param>
        </member>
        <member name="M:Apq.Security.Cryptography.SymmetricAlgorithmHelper.DecryptFile(System.String,System.String,System.Security.Cryptography.SymmetricAlgorithm)">
            <summary>
            解密文件
            </summary>
            <param name="inName">来源文件</param>
            <param name="outName">输出文件</param>
            <param name="Algorithm">对称算法</param>
        </member>
        <member name="M:Apq.Security.Cryptography.SymmetricAlgorithmHelper.EncryptString(System.String,System.Security.Cryptography.SymmetricAlgorithm)">
            <summary>
            加密字符串
            </summary>
            <param name="PlainText">原始字符串</param>
            <param name="Algorithm">对称算法</param>
            <returns>Base64编码后的字符串</returns>
        </member>
        <member name="M:Apq.Security.Cryptography.SymmetricAlgorithmHelper.DecryptString(System.String,System.Security.Cryptography.SymmetricAlgorithm)">
            <summary>
            解密字符串
            </summary>
            <param name="CypherText">加密后的Base64字符串</param>
            <param name="Algorithm">对称算法</param>
            <returns>原始字符串</returns>
        </member>
        <member name="T:Apq.Security.Cryptography.DESHelper">
            <summary>
            DESHelper
            </summary>
        </member>
        <member name="M:Apq.Security.Cryptography.DESHelper.FormatKey(System.Byte[])">
            <summary>
            格式化密钥
            </summary>
            <param name="desKey">密钥</param>
            <returns></returns>
        </member>
        <member name="M:Apq.Security.Cryptography.DESHelper.EncryptFile(System.String,System.String,System.Byte[],System.Byte[])">
            <summary>
            加密文件
            </summary>
            <param name="inName">来源文件</param>
            <param name="outName">输出文件</param>
            <param name="desKey">加密密钥</param>
            <param name="desIV">初始向量</param>
        </member>
        <member name="M:Apq.Security.Cryptography.DESHelper.DecryptFile(System.String,System.String,System.Byte[],System.Byte[])">
            <summary>
            解密文件
            </summary>
            <param name="inName">来源文件</param>
            <param name="outName">输出文件</param>
            <param name="desKey">解密密钥</param>
            <param name="desIV">初始向量</param>
        </member>
        <member name="M:Apq.Security.Cryptography.DESHelper.EncryptString(System.String,System.Byte[],System.Byte[])">
            <summary>
            加密字符串
            </summary>
            <param name="PlainText">原始字符串</param>
            <param name="desKey">加密密钥</param>
            <param name="desIV">初始向量</param>
            <returns>Base64编码后的字符串</returns>
        </member>
        <member name="M:Apq.Security.Cryptography.DESHelper.DecryptString(System.String,System.Byte[],System.Byte[])">
            <summary>
            解密字符串
            </summary>
            <param name="CypherText">加密后的Base64字符串</param>
            <param name="desKey">解密密钥</param>
            <param name="desIV">初始向量</param>
        </member>
        <member name="T:Apq.Data.SqlClient.Common">
            <summary>
            公用模块
            </summary>
        </member>
        <member name="F:Apq.Data.SqlClient.Common.NonSupportedInType">
            <summary>
            对于不支持的来源类型返回的默认值
            </summary>
        </member>
        <member name="F:Apq.Data.SqlClient.Common.NonSupportedOutType">
            <summary>
            对于不支持的目标类型返回的默认值
            </summary>
        </member>
        <member name="M:Apq.Data.SqlClient.Common.GetCSType(System.Data.SqlDbType)">
            <summary>
            获取数据库类型对应的C#类型
            </summary>
            <param name="sdt"></param>
            <returns></returns>
        </member>
        <member name="M:Apq.Data.SqlClient.Common.GetSqlDbType(System.Type)">
            <summary>
            获取C#类型对应的数据库类型
            </summary>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:Apq.Data.SqlClient.Common.EncodeString(System.String)">
            <summary>
            对字符串编码
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Apq.Data.SqlClient.Common.ConvertToSqlON(System.Data.SqlDbType,System.Object)">
            <summary>
            获取 SQL 语句常量表示串
            </summary>
            <param name="sdt">已支持类型受限于下级方法实现</param>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Apq.Data.SqlClient.Common.ConvertToSqlON(System.Data.SqlDbType,System.ValueType)">
            <summary>
            获取 SQL 语句常量表示串
            </summary>
            <param name="sdt">已支持类型受限于下级方法实现</param>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:Apq.Data.SqlClient.Common.ConvertToSqlON(System.Data.SqlDbType,System.String)">
            <summary>
            获取 SQL 语句常量表示串
            </summary>
            <param name="sdt">{Char,DateTime,NChar,NText,NVarChar,SmallDateTime,Text,UniqueIdentifier,VarChar}</param>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Apq.Data.SqlClient.Common.ConvertToSqlON(System.Data.SqlDbType,System.Byte[])">
            <summary>
            获取 SQL 语句常量表示串
            </summary>
            <param name="sdt">{Binary,Bit,Image,Variant,UniqueIdentifier}</param>
            <param name="ary"></param>
            <returns></returns>
        </member>
        <member name="M:Apq.Data.SqlClient.Common.ConvertToSqlON(System.Object)">
            <summary>
            根据传入对象类型,获取对应的 SQL 语句常量表示串
            </summary>
            <returns></returns>
        </member>
        <member name="M:Apq.Data.SqlClient.Common.ParseSqlON``1(System.Data.SqlDbType,System.String)">
            <summary>
            解析 SqlON 对象
            </summary>
            <typeparam name="T">解析结果目标类型</typeparam>
            <param name="sdt">来源类型</param>
            <param name="SqlON">来源 SqlON 字符串</param>
            <returns></returns>
        </member>
        <member name="P:Apq.Data.SqlClient.Common.htSqlToCS">
            <summary>
            获取SQL数据库类型与C#类型的对应表
            </summary>
        </member>
        <member name="P:Apq.Data.SqlClient.Common.htCSToSql">
            <summary>
            获取C#类型与SQL数据库类型的对应表
            </summary>
        </member>
        <member name="T:Apq.Data.Common.DbCommandHelper">
            <summary>
            DbCommandHelper
            </summary>
        </member>
        <member name="M:Apq.Data.Common.DbCommandHelper.#ctor(System.Data.Common.DbCommand)">
            <summary>
            装饰
            </summary>
            <param name="Command"></param>
        </member>
        <member name="M:Apq.Data.Common.DbCommandHelper.AddParameter(System.Data.Common.DbParameter)">
            <summary>
            [覆盖添加]添加参数
            </summary>
            <param name="Parameter"></param>
        </member>
        <member name="M:Apq.Data.Common.DbCommandHelper.AddParameter(System.String,System.Object)">
            <summary>
            [覆盖添加]添加参数
            </summary>
            <param name="ParameterName"></param>
            <param name="Value"></param>
        </member>
        <member name="M:Apq.Data.Common.DbCommandHelper.AddParameter(System.String,System.Object,System.Data.DbType)">
            <summary>
            [覆盖添加]添加参数
            </summary>
            <param name="ParameterName"></param>
            <param name="Value"></param>
            <param name="DbType"></param>
        </member>
        <member name="M:Apq.Data.Common.DbCommandHelper.AddParameter(System.String,System.Object,System.Data.DbType,System.Int32)">
            <summary>
            [覆盖添加]添加参数
            </summary>
            <param name="ParameterName"></param>
            <param name="Value"></param>
            <param name="DbType"></param>
            <param name="Size"></param>
        </member>
        <member name="P:Apq.Data.Common.DbCommandHelper.Command">
            <summary>
            获取 DbCommand
            </summary>
        </member>
        <member name="T:Apq.Editor.IFileLoader">
            <summary>
            文件加载器(对一个文件进行加载或保存)
            </summary>
        </member>
        <member name="M:Apq.Editor.IFileLoader.Open">
            <summary>
            打开由 FileName 指定的文件
            </summary>
        </member>
        <member name="M:Apq.Editor.IFileLoader.Save">
            <summary>
            保存到由 FileName 指定的文件
            </summary>
        </member>
        <member name="M:Apq.Editor.IFileLoader.SaveAs(System.String)">
            <summary>
            另存为
            </summary>
            <param name="FileName">保存到由参数 FileName 指定的文件</param>
        </member>
        <member name="P:Apq.Editor.IFileLoader.FileName">
            <summary>
            获取或设置文件名
            </summary>
        </member>
        <member name="T:Apq.Data.Common.Common">
            <summary>
            公用模块
            </summary>
        </member>
        <member name="T:Apq.Xml.XmlDocument">
            <summary>
            XmlDocument
            </summary>
        </member>
        <member name="M:Apq.Xml.XmlDocument.NewXmlDocument">
            <summary>
            新建
            </summary>
            <returns></returns>
        </member>
        <member name="T:Apq.Config.RegConfig">
            <summary>
            注册表配置
            </summary>
        </member>
        <member name="T:Apq.Config.clsConfig">
            <summary>
            配置
            </summary>
        </member>
        <member name="F:Apq.Config.clsConfig._Path">
            <summary>
            文件路径
            </summary>
        </member>
        <member name="F:Apq.Config.clsConfig._Root">
            <summary>
            根
            </summary>
        </member>
        <member name="M:Apq.Config.clsConfig.Open(System.String,System.String)">
            <summary>
            打开配置
            提供生成接口,用于配置池
            </summary>
            <param name="Path"></param>
            <param name="Root"></param>
        </member>
        <member name="M:Apq.Config.clsConfig.Save">
            <summary>
            保存配置
            </summary>
        </member>
        <member name="M:Apq.Config.clsConfig.SaveAs(System.String)">
            <summary>
            另存为
            </summary>
        </member>
        <member name="M:Apq.Config.clsConfig.Close">
            <summary>
            关闭配置
            </summary>
        </member>
        <member name="M:Apq.Config.clsConfig.GetValueNames">
            <summary>
            获取配置名列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:Apq.Config.clsConfig.GetValue(System.String,System.String)">
            <summary>
            获取配置值
            </summary>
            <param name="ClassName">类名</param>
            <param name="PropertyName">属性名</param>
            <returns>配置值</returns>
        </member>
        <member name="M:Apq.Config.clsConfig.SetValue(System.String,System.String,System.String)">
            <summary>
            设置配置值
            </summary>
            <param name="ClassName">类名</param>
            <param name="PropertyName">属性名</param>
            <param name="Value">配置值</param>
        </member>
        <member name="M:Apq.Config.clsConfig.GetValue(System.Type,System.String)">
            <summary>
            获取配置值
            </summary>
            <param name="t">类</param>
            <param name="PropertyName">属性名</param>
            <returns>配置值</returns>
        </member>
        <member name="M:Apq.Config.clsConfig.SetValue(System.Type,System.String,System.String)">
            <summary>
            设置配置值
            </summary>
            <param name="t">类</param>
            <param name="PropertyName">属性名</param>
            <param name="Value">配置值</param>
        </member>
        <member name="M:Apq.Config.clsConfig.GetValue(System.String)">
            <summary>
            获取当前类的配置值
            </summary>
            <param name="PropertyName">属性名</param>
            <returns>配置值</returns>
        </member>
        <member name="M:Apq.Config.clsConfig.SetValue(System.String,System.String)">
            <summary>
            设置当前类的配置值
            </summary>
            <param name="PropertyName">属性名</param>
            <param name="Value">配置值</param>
        </member>
        <member name="P:Apq.Config.clsConfig.Path">
            <summary>
            获取或设置文件路径
            </summary>
        </member>
        <member name="P:Apq.Config.clsConfig.Root">
            <summary>
            获取或设置根
            </summary>
        </member>
        <member name="P:Apq.Config.clsConfig.Item(System.String,System.String)">
            <summary>
            获取或设置配置[推荐使用]
            </summary>
            <param name="ClassName">类名</param>
            <param name="PropertyName">属性名</param>
            <returns></returns>
        </member>
        <member name="P:Apq.Config.clsConfig.Item(System.Type,System.String)">
            <summary>
            获取或设置配置
            </summary>
            <param name="t">类</param>
            <param name="PropertyName">属性名</param>
            <returns></returns>
        </member>
        <member name="P:Apq.Config.clsConfig.Item(System.String)">
            <summary>
            获取或设置当前类的配置
            </summary>
            <param name="PropertyName">属性名</param>
            <returns></returns>
        </member>
        <member name="M:Apq.Config.RegConfig.GetValueNames">
            <summary>
            获取配置名列表
            </summary>
            <returns></returns>
        </member>
        <member name="P:Apq.Config.RegConfig.Path">
            <summary>
            获取或设置[反射]注册表基项
            <remarks>可选值:"$reg$" + {ClassesRoot, CurrentConfig, CurrentUser, DynData, LocalMachine, PerformanceData, Users}</remarks>
            </summary>
        </member>
        <member name="P:Apq.Config.RegConfig.Root">
            <summary>
            获取或设置注册表子项的名称或路径
            </summary>
        </member>
        <member name="P:Apq.Config.RegConfig.Item(System.String,System.String)">
            <summary>
            获取或设置配置[推荐使用]
            </summary>
            <param name="ClassName">类名</param>
            <param name="PropertyName">属性名</param>
            <returns></returns>
        </member>
        <member name="T:Apq.Char">
            <summary>
            Apq.Char
            </summary>
        </member>
        <member name="M:Apq.Char.Random(System.Nullable{System.Int32},System.Char[])">
            <summary>
            获取随机字符
            </summary>
            <param name="Seed">种子值[只需要第0个值,null表示使用默认种子值]</param>
            <param name="All">字符集</param>
            <returns></returns>
        </member>
        <member name="M:Apq.Char.Random(System.Nullable{System.Int32},System.String)">
            <summary>
            获取随机字符
            </summary>
            <param name="Seed">种子值[只需要第0个值,null表示使用默认种子值]</param>
            <param name="All">字符集</param>
            <returns></returns>
        </member>
        <member name="T:Apq.Utils.Win32">
            <summary>
            Wrapper for Win32 API calls
            </summary>
        </member>
        <member name="M:Apq.Utils.Win32.GetVolumeName(Apq.String)">
            <summary>
            Returns the name of a logical drive
            </summary>
            <param name="driveLetter"></param>
            <returns>the name of the drive in the format "a:\"</returns>
        </member>
        <member name="M:Apq.Utils.Win32.GetDriveType(Apq.String)">
            <summary>
            Returns the type of the logical drive
            </summary>
            <param name="driveLetter"></param>
            <returns>the name of the drive in the format "a:\"</returns>
        </member>
        <member name="T:Apq.Utils.Win32.DriveType">
            <summary>
            DriveType
            </summary>
        </member>
        <member name="F:Apq.Utils.Win32.DriveType.Unknown">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.Win32.DriveType.NoRootDirectory">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.Win32.DriveType.Removable">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.Win32.DriveType.Fixed">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.Win32.DriveType.Remote">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.Win32.DriveType.CdRom">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.Utils.Win32.DriveType.RamDisk">
            <summary>
            
            </summary>
        </member>
        <member name="T:Apq.Config.IniConfig">
            <summary>
            ini操作类
            </summary>
        </member>
        <member name="M:Apq.Config.IniConfig.Write(System.String,System.String,System.String)">
            <summary>
            写入INI文件
            </summary>
            <param name="Section">项目名称(如 [ClassName] )</param>
            <param name="Key">键</param>
            <param name="Value">值</param>
        </member>
        <member name="M:Apq.Config.IniConfig.Read(System.String,System.String)">
            <summary>
            读出INI文件
            </summary>
            <param name="Section">项目名称(如 [ClassName])</param>
            <param name="Key">键</param>
        </member>
        <member name="M:Apq.Config.IniConfig.GetValueNames">
            <summary>
            获取配置名列表
            </summary>
            <returns></returns>
        </member>
        <member name="P:Apq.Config.IniConfig.Path">
            <summary>
            获取或设置文件路径
            </summary>
        </member>
        <member name="P:Apq.Config.IniConfig.Item(System.String,System.String)">
            <summary>
            获取或设置配置[推荐使用]
            </summary>
            <param name="ClassName">类名</param>
            <param name="PropertyName">属性名</param>
            <returns></returns>
        </member>
        <member name="T:Apq.Data.Common.DataColumnMappingCollectionHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:Apq.Data.Common.DataColumnMappingCollectionHelper.GetDataSetColNames(System.Data.Common.DataColumnMappingCollection)">
            <summary>
            获取 DataSet 列名集合
            </summary>
            <param name="dcmc"></param>
            <returns></returns>
        </member>
        <member name="M:Apq.Data.Common.DataColumnMappingCollectionHelper.GetSourceColNames(System.Data.Common.DataColumnMappingCollection)">
            <summary>
            获取 Source 列名集合
            </summary>
            <param name="dcmc"></param>
            <returns></returns>
        </member>
        <member name="T:Apq.Exception">
            <summary>
            Exception
            </summary>
        </member>
        <member name="M:Apq.Exception.GetOriginalException(System.Exception)">
            <summary>
            获取原始异常
            </summary>
            <param name="ex"></param>
            <returns></returns>
        </member>
        <member name="M:Apq.Exception.#ctor(System.Exception)">
            <summary>
            Exception
            </summary>
            <param name="ex"></param>
        </member>
        <member name="P:Apq.Exception.Ex">
            <summary>
            获取异常对象
            </summary>
        </member>
        <member name="P:Apq.Exception.Level">
            <summary>
            获取或设置异常级别
            </summary>
        </member>
        <member name="P:Apq.Exception.OriginalException">
            <summary>
            获取原始异常
            </summary>
            <returns></returns>
        </member>
        <member name="T:Apq.DllImports.User32">
            <summary>
            
            </summary>
        </member>
        <member name="F:Apq.DllImports.User32.WS_SHOWNORMAL">
            <summary>
            普通窗口
            </summary>
        </member>
        <member name="F:Apq.DllImports.User32.SM_MOUSEPRESENT">
            <summary>
            通过操作系统获取是否已安装鼠标
            </summary>
        </member>
        <member name="F:Apq.DllImports.User32.SM_CMOUSEBUTTONS">
            <summary>
            通过操作系统获取鼠标按键数
            </summary>
        </member>
        <member name="F:Apq.DllImports.User32.SM_MOUSEWHEELPRESENT">
            <summary>
            通过操作系统获取鼠标是否具有滚轮
            </summary>
        </member>
        <member name="F:Apq.DllImports.User32.MOUSEEVENTF_MOVE">
            <summary>
            鼠标移动事件
            </summary>
        </member>
        <member name="F:Apq.DllImports.User32.MOUSEEVENTF_LEFTDOWN">
            <summary>
            左键按下事件
            </summary>
        </member>
        <member name="F:Apq.DllImports.User32.MOUSEEVENTF_LEFTUP">
            <summary>
            左键放开事件
            </summary>
        </member>
        <member name="F:Apq.DllImports.User32.MOUSEEVENTF_MIDDLEDOWN">
            <summary>
            中键按下事件
            </summary>
        </member>
        <member name="F:Apq.DllImports.User32.MOUSEEVENTF_MIDDLEUP">
            <summary>
            中键放开事件
            </summary>
        </member>
        <member name="F:Apq.DllImports.User32.MOUSEEVENTF_RIGHTDOWN">
            <summary>
            右键按下事件
            </summary>
        </member>
        <member name="F:Apq.DllImports.User32.MOUSEEVENTF_RIGHTUP">
            <summary>
            右键放开事件
            </summary>
        </member>
        <member name="M:Apq.DllImports.User32.GetSystemMetrics(System.Int32)">
            <summary>
            通过操作系统获取指定信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:Apq.DllImports.User32.GetWindowThreadProcessId(System.IntPtr,System.Int64@)">
            <summary>
            通过窗口句柄获取进程ID和线程ID
            </summary>
            <param name="hWnd">窗口句柄</param>
            <param name="lpdwProcessId">进程ID</param>
            <returns>线程ID</returns>
        </member>
        <member name="M:Apq.DllImports.User32.GetWindowRect(System.Int32,Apq.DllImports.User32.RECT@)">
            <summary>
            获取窗口的屏幕范围
            </summary>
            <returns></returns>
        </member>
        <member name="M:Apq.DllImports.User32.EnableWindow(System.Int32,System.Int32)">
            <summary>
            启用/禁用 窗口
            </summary>
            <returns></returns>
        </member>
        <member name="M:Apq.DllImports.User32.ShowWindow(System.IntPtr,System.Int32)">
            <summary>
            显示/隐藏 窗口
            </summary>
            <param name="hWnd"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Apq.DllImports.User32.ShowWindowAsync(System.IntPtr,System.Int32)">
            <summary>
            异步显示窗口
            </summary>
            <param name="hWnd"></param>
            <param name="cmdShow"></param>
            <returns></returns>
        </member>
        <member name="M:Apq.DllImports.User32.SetForegroundWindow(System.IntPtr)">
            <summary>
            设置前台窗口
            </summary>
            <param name="hWnd"></param>
            <returns></returns>
        </member>
        <member name="M:Apq.DllImports.User32.FindWindow(System.String,System.String)">
            <summary>
            查找窗口
            </summary>
            <param name="lpClassName"></param>
            <param name="lpWindowName">窗口名</param>
            <returns></returns>
        </member>
        <member name="M:Apq.DllImports.User32.FindWindowEx(System.IntPtr,System.IntPtr,System.String,System.String)">
            <summary>
            查找子窗口
            </summary>
            <param name="hwndParent">父窗口</param>
            <param name="hwndChildAfter"></param>
            <param name="lpszClass"></param>
            <param name="lpszWindow"></param>
            <returns></returns>
        </member>
        <member name="M:Apq.DllImports.User32.SendMessage(System.IntPtr,System.Int32,System.IntPtr,System.String)">
            <summary>
            给窗体发送信息
            </summary>
            <param name="hWnd"></param>
            <param name="Msg"></param>
            <param name="wParam"></param>
            <param name="lParam"></param>
            <returns></returns>
        </member>
        <member name="M:Apq.DllImports.User32.GetKeyState(System.Int32)">
            <summary>
            获取键状态
            </summary>
            <param name="nVirtKey"></param>
            <returns></returns>
        </member>
        <member name="M:Apq.DllImports.User32.mouse_event(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            鼠标事件
            </summary>
        </member>
        <member name="M:Apq.DllImports.User32.SwapMouseButton(System.Int32)">
            <summary>
            交换鼠标左右键(左手键盘设置)
            </summary>
            <returns></returns>
        </member>
        <member name="M:Apq.DllImports.User32.ClipCursor(Apq.DllImports.User32.RECT@)">
            <summary>
            设置光标移动范围
            </summary>
            <returns></returns>
        </member>
        <member name="M:Apq.DllImports.User32.ShowCursor(System.Boolean)">
            <summary>
            显示/隐藏 光标
            </summary>
            <returns></returns>
        </member>
        <member name="M:Apq.DllImports.User32.GetCursorPos(Apq.DllImports.User32.POINTAPI@)">
            <summary>
            获取光标位置
            </summary>
            <returns></returns>
        </member>
        <member name="M:Apq.DllImports.User32.SetCursorPos(System.Int32,System.Int32)">
            <summary>
            设置光标位置
            </summary>
            <returns></returns>
        </member>
        <member name="M:Apq.DllImports.User32.GetDoubleClickTime">
            <summary>
            获取鼠标双击时间
            </summary>
            <returns></returns>
        </member>
        <member name="M:Apq.DllImports.User32.SetDoubleClickTime(System.Int32)">
            <summary>
            设置鼠标双击时间
            </summary>
            <returns></returns>
        </member>
        <member name="T:Apq.DllImports.User32.POINTAPI">
            <summary>
            表示光标位置
            </summary>
        </member>
        <member name="F:Apq.DllImports.User32.POINTAPI.x">
            <summary>
            光标X坐标
            </summary>
        </member>
        <member name="F:Apq.DllImports.User32.POINTAPI.y">
            <summary>
            光标Y坐标
            </summary>
        </member>
        <member name="T:Apq.DllImports.User32.RECT">
            <summary>
            表示矩形大小
            </summary>
        </member>
        <member name="F:Apq.DllImports.User32.RECT.left">
            <summary>
            left
            </summary>
        </member>
        <member name="F:Apq.DllImports.User32.RECT.top">
            <summary>
            top
            </summary>
        </member>
        <member name="F:Apq.DllImports.User32.RECT.right">
            <summary>
            right
            </summary>
        </member>
        <member name="F:Apq.DllImports.User32.RECT.bottom">
            <summary>
            bottom
            </summary>
        </member>
        <member name="T:Apq.Configuration.ConfigurationManager">
            <summary>
            提供对客户端应用程序配置文件的访问。
            </summary>
        </member>
        <member name="M:Apq.Configuration.ConfigurationManager.Open(System.String)">
            <summary>
            将指定的客户端配置文件作为 System.Configuration.Configuration 对象打开。
            </summary>
            <param name="Path">配置文件的完整路径</param>
            <returns></returns>
        </member>
        <member name="M:Apq.Configuration.ConfigurationManager.Open(System.Reflection.Assembly)">
            <summary>
            将指定的程序集的配置文件作为 System.Configuration.Configuration 对象打开。
            </summary>
            <param name="Assembly">程序集</param>
            <returns></returns>
        </member>
        <member name="T:Apq.Configuration.ConfigurationHelper">
            <summary>
            ConfigurationHelper
            </summary>
        </member>
        <member name="F:Apq.Configuration.ConfigurationHelper.Config">
            <summary>
            配置文件
            </summary>
        </member>
        <member name="M:Apq.Configuration.ConfigurationHelper.#ctor(System.Configuration.Configuration)">
            <summary>
            构造函数
            </summary>
            <param name="Config"></param>
        </member>
        <member name="M:Apq.Configuration.ConfigurationHelper.SetAppSettings(System.String,System.String)">
            <summary>
            设置 AppSettings
            </summary>
            <param name="Key"></param>
            <param name="Value"></param>
        </member>
        <member name="T:Apq.ConnectionStrings.Textfile.OleDbConnection">
            <summary>
            OLEDB 连接字符串
            </summary>
        </member>
        <member name="F:Apq.ConnectionStrings.Textfile.OleDbConnection.ConnectionStringFormat">
            <summary>
            带格式的连接字符串
            </summary>
        </member>
        <member name="M:Apq.ConnectionStrings.Textfile.OleDbConnection.GetConnectionString(System.String)">
            <summary>
            Excel 带格式的连接字符串
            </summary>
            <summary>
            获取连接字符串
            </summary>
            <param name="dataSource"></param>
            <returns></returns>
        </member>
        <member name="M:Apq.ConnectionStrings.Textfile.OleDbConnection.GetConnectionString(System.String,System.String,System.String)">
            <summary>
            获取连接字符串
            </summary>
            <param name="dataSource"></param>
            <param name="HDR">首行是否为列名["Yes"]</param>
            <param name="FMT">指定分隔符或指明文本等宽{Fixed:等宽,TabDelimited:Tab分隔,Delimited(,):以括号内容分隔}</param>
            <returns></returns>
        </member>
        <member name="T:Apq.ConnectionStrings.SQLServer.SqlConnection">
            <summary>
            SqlConnection 连接字符串
            </summary>
        </member>
        <member name="F:Apq.ConnectionStrings.SQLServer.SqlConnection.ConnectionStringFormat">
            <summary>
            带格式的连接字符串
            </summary>
        </member>
        <member name="M:Apq.ConnectionStrings.SQLServer.SqlConnection.GetConnectionString(System.String,System.String,System.String)">
            <summary>
            获取连接字符串
            </summary>
            <param name="dataSource">服务器地址</param>
            <param name="UserName">用户名</param>
            <param name="pwd">密码</param>
            <returns></returns>
        </member>
        <member name="M:Apq.ConnectionStrings.SQLServer.SqlConnection.GetConnectionString(System.String,System.String,System.String,System.String)">
            <summary>
            获取连接字符串
            </summary>
            <param name="dataSource">服务器地址</param>
            <param name="UserName">用户名</param>
            <param name="pwd">密码</param>
            <param name="dbName">默认数据库名</param>
            <returns></returns>
        </member>
        <member name="T:Apq.ComponentModel.BackgroundWorker">
            <summary>
            BackgroundWorker
            </summary>
        </member>
        <member name="M:Apq.ComponentModel.BackgroundWorker.CancelAsync(System.ComponentModel.BackgroundWorker)">
            <summary>
            [可重入]取消后台操作
            </summary>
            <param name="bw"></param>
        </member>
        <member name="T:Apq.Delegates">
            <summary>
            代理及其示例方法
            </summary>
        </member>
        <member name="M:Apq.Delegates.SetProperty_M(System.Object,System.String,System.Object)">
            <summary>
            [反射]设置对象属性
            </summary>
            <param name="obj">对象</param>
            <param name="PropertyName">属性名</param>
            <param name="Value">值</param>
        </member>
        <member name="T:Apq.Delegates.SetProperty">
            <summary>
            设置 obj 的 PropertyName 属性值为 Value
            </summary>
            <param name="obj">对象</param>
            <param name="PropertyName">属性名</param>
            <param name="Value">值</param>
        </member>
        <member name="T:Apq.Common">
            <summary>
            公用功能
            </summary>
        </member>
        <member name="M:Apq.Common.GetCallingMethod">
            <summary>
            GetCallingMethod(调用时注意需要加try-catch块防止优化)
            </summary>
            <returns></returns>
        </member>
        <member name="M:Apq.Common.GetCallingMethod(System.Int32)">
            <summary>
            GetCallingMethod(调用时注意需要加try-catch块防止优化)
            </summary>
            <param name="skipFrames">堆栈上要跳过的帧数</param>
            <returns></returns>
        </member>
        <member name="M:Apq.Common.GetCallingClass">
            <summary>
            GetCallingClass(调用时注意需要加try-catch块防止优化)
            </summary>
            <returns></returns>
        </member>
        <member name="T:Apq.Dos.Common">
            <summary>
            公用模块
            </summary>
        </member>
        <member name="M:Apq.Dos.Common.EncodeParam(System.String)">
            <summary>
            去除参数中的引号并在两端添加引号
            </summary>
            <param name="Param">参数值</param>
            <returns></returns>
        </member>
        <member name="T:Apq.Data.Dev.Sqls">
            <summary>
            Sqls
            </summary>
        </member>
        <member name="F:Apq.Data.Dev.Sqls.Apq_TablesCreate">
            <summary>
            Apq_Tables 创建
            </summary>
        </member>
        <member name="F:Apq.Data.Dev.Sqls.Apq_TablesUpdate">
            <summary>
            Apq_Tables 更新
            </summary>
        </member>
        <member name="F:Apq.Data.Dev.Sqls.Apq_ColumnsCreate">
            <summary>
            Apq_Columns 创建
            </summary>
        </member>
        <member name="F:Apq.Data.Dev.Sqls.Apq_ColumnsUpdate">
            <summary>
            Apq_Columns 更新
            </summary>
        </member>
        <member name="T:Apq.Data.DataView">
            <summary>
            DataView
            </summary>
        </member>
        <member name="M:Apq.Data.DataView.#ctor(System.Data.DataView)">
            <summary>
            装饰
            </summary>
        </member>
        <member name="P:Apq.Data.DataView.View">
            <summary>
            获取视图
            </summary>
        </member>
        <member name="T:Apq.ConnectionStrings.Access.OleDbConnection">
            <summary>
            OLEDB 连接字符串
            </summary>
        </member>
        <member name="F:Apq.ConnectionStrings.Access.OleDbConnection.ConnectionStringFormat">
            <summary>
            带格式的连接字符串
            </summary>
        </member>
        <member name="F:Apq.ConnectionStrings.Access.OleDbConnection.ConnectionStringDBPwdFormat">
            <summary>
            文件密码部分
            </summary>
        </member>
        <member name="M:Apq.ConnectionStrings.Access.OleDbConnection.GetConnectionString(System.String,System.String,System.String)">
            <summary>
            获取连接字符串
            </summary>
            <param name="dataSource">文件地址</param>
            <param name="UserName">用户名</param>
            <param name="pwd">用户密码</param>
            <returns></returns>
        </member>
        <member name="M:Apq.ConnectionStrings.Access.OleDbConnection.GetConnectionString(System.String,System.String,System.String,System.String)">
            <summary>
            获取连接字符串
            </summary>
            <param name="dataSource">文件地址</param>
            <param name="UserName">用户名</param>
            <param name="pwd">用户密码</param>
            <param name="dbpwd">文件密码</param>
            <returns></returns>
        </member>
        <member name="T:Apq.STReturn">
            <summary>
            通用返回类(结构)
            </summary>
        </member>
        <member name="M:Apq.STReturn.#ctor">
            <summary>
            STReturn
            </summary>
        </member>
        <member name="F:Apq.STReturn.NReturn">
            <summary>
            返回值(主要思想:1代表成功,-1代表失败,其余未知,也可另行自定义)
            </summary>
        </member>
        <member name="F:Apq.STReturn.ExMsg">
            <summary>
            返回信息(一般是非成功时使用)
            </summary>
        </member>
        <member name="P:Apq.STReturn.FNReturn">
            <summary>
            方法返回值
            </summary>
        </member>
        <member name="P:Apq.STReturn.POuts">
            <summary>
            输出参数列表
            </summary>
        </member>
        <member name="T:Apq.Data.DataSet">
            <summary>
            DataSet
            </summary>
        </member>
        <member name="M:Apq.Data.DataSet.CreateDefaultMapping(System.Data.DataSet)">
            <summary>
            创建默认表列映射
            </summary>
            <param name="ds"></param>
            <returns></returns>
        </member>
        <member name="M:Apq.Data.DataSet.ExportToExcel(System.Data.DataSet,System.Data.OleDb.OleDbConnection,System.Data.Common.DataTableMappingCollection)">
            <summary>
            导出指定表到 Excel 文件
            </summary>
            <param name="ds"></param>
            <param name="dtmc">需要导出的表列映射(空列表表示全部)</param>
            <param name="odc"></param>
        </member>
        <member name="M:Apq.Data.DataSet.BuildupTabelForMaxrow(System.Data.DataSet,System.Int32)">
            <summary>
            按最大行数限制组织表(新建表,转移数据,新表名为原表名+"续"+编号)
            </summary>
            <param name="ds"></param>
            <param name="Maxrow">每个表最大行数</param>
        </member>
        <member name="M:Apq.Data.DataSet.ExportToText(System.Data.DataSet,System.String,System.String,System.String,System.Boolean)">
            <summary>
            [追加]导出指定表到文本文件
            </summary>
            <param name="ds"></param>
            <param name="FileName"></param>
            <param name="strColSpliter">列分隔符</param>
            <param name="strRowSpliter">行分隔符</param>
            <param name="ContainsColName">是否包含列名</param>
        </member>
        <member name="T:Apq.Data.Common.SQLHelper">
            <summary>
            辅助生成 SQL 语句
            </summary>
        </member>
        <member name="M:Apq.Data.Common.SQLHelper.BuildValuesSegment(System.String)">
            <summary>
            构建 VALUES 片段
            </summary>
            <param name="vals">常量列表(不带括号)</param>
            <returns></returns>
        </member>
        <member name="M:Apq.Data.Common.SQLHelper.BuildInsertSegment(System.String,System.String)">
            <summary>
            构建 INSERT 片段
            </summary>
            <param name="TabeName">表(别)名</param>
            <param name="ColNames">列名</param>
            <returns></returns>
        </member>
        <member name="M:Apq.Data.Common.SQLHelper.BuildInsertSegment(System.String,System.String,System.Boolean)">
            <summary>
            构建 INSERT 片段
            </summary>
            <param name="TabeName">表(别)名</param>
            <param name="ColNames">列名</param>
            <param name="ContainsInto">是否包含 INTO 在 INSERT 后面</param>
            <returns></returns>
        </member>
        <member name="M:Apq.Data.Common.SQLHelper.BuildSelectSegment(System.String)">
            <summary>
            构建 SELECT 片段
            </summary>
            <param name="ColNames">列名/常量</param>
            <returns></returns>
        </member>
        <member name="M:Apq.Data.Common.SQLHelper.BuildFromSegment(System.String)">
            <summary>
            构建 FROM 片段
            </summary>
            <param name="TabeName">表名 / [子查询+表别名]</param>
            <returns></returns>
        </member>
        <member name="M:Apq.Data.Common.SQLHelper.BuildWhereSegment(System.String)">
            <summary>
            构建 WHERE 片段
            </summary>
            <param name="Conditions">条件</param>
            <returns></returns>
        </member>
        <member name="M:Apq.Data.Common.SQLHelper.BuildGroupSegment(System.String)">
            <summary>
            构建 GROUP 片段
            </summary>
            <param name="ColNames">列名/分组列</param>
            <returns></returns>
        </member>
        <member name="M:Apq.Data.Common.SQLHelper.BuildHavingSegment(System.String)">
            <summary>
            构建 HAVING 片段
            </summary>
            <param name="Conditions">条件</param>
            <returns></returns>
        </member>
        <member name="M:Apq.Data.Common.SQLHelper.BuildOrderSegment(System.String)">
            <summary>
            构建 ORDER 片段
            </summary>
            <param name="ColNames">列名/分组列</param>
            <returns></returns>
        </member>
        <member name="M:Apq.Data.Common.SQLHelper.BuildUpdateSegment(System.String)">
            <summary>
            构建 UPDATE 片段
            </summary>
            <param name="TabeName">表(别)名</param>
            <returns></returns>
        </member>
        <member name="M:Apq.Data.Common.SQLHelper.BuildSetSegment(System.String)">
            <summary>
            构建 SET 片段
            </summary>
            <param name="Cols">对列赋值串</param>
            <returns></returns>
        </member>
        <member name="T:Apq.Config.ConfigChain">
            <summary>
            配置链,用于关联用户配置文件和程序集配置文件
            </summary>
        </member>
        <member name="M:Apq.Config.ConfigChain.#ctor(Apq.Config.clsConfig,Apq.Config.clsConfig)">
            <summary>
            配置链
            </summary>
            <param name="AsmConfig">程序集配置文件</param>
            <param name="UserConfig">用户配置文件</param>
        </member>
        <member name="F:Apq.Config.ConfigChain._AsmConfig">
            <summary>
            程序集配置文件
            </summary>
        </member>
        <member name="F:Apq.Config.ConfigChain._UserConfig">
            <summary>
            用户配置文件
            </summary>
        </member>
        <member name="M:Apq.Config.ConfigChain.Save">
            <summary>
            保存配置
            </summary>
        </member>
        <member name="M:Apq.Config.ConfigChain.SaveAs(System.String)">
            <summary>
            另存为
            </summary>
        </member>
        <member name="M:Apq.Config.ConfigChain.Close">
            <summary>
            关闭配置
            </summary>
        </member>
        <member name="M:Apq.Config.ConfigChain.GetValueNames">
            <summary>
            获取配置名列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:Apq.Config.ConfigChain.Open(System.String,System.String)">
            <summary>
            不可使用
            </summary>
        </member>
        <member name="M:Apq.Config.ConfigChain.GetValue(System.String)">
            <summary>
            不可使用
            </summary>
        </member>
        <member name="M:Apq.Config.ConfigChain.SetValue(System.String,System.String)">
            <summary>
            不可使用
            </summary>
        </member>
        <member name="P:Apq.Config.ConfigChain.AsmConfig">
            <summary>
            获取程序集配置文件
            </summary>
        </member>
        <member name="P:Apq.Config.ConfigChain.UserConfig">
            <summary>
            获取用户配置文件
            </summary>
        </member>
        <member name="P:Apq.Config.ConfigChain.Item(System.String,System.String)">
            <summary>
            获取或设置配置[推荐使用]
            </summary>
            <param name="ClassName">类名</param>
            <param name="PropertyName">属性名</param>
            <returns></returns>
        </member>
        <member name="P:Apq.Config.ConfigChain.Path">
            <summary>
            不可使用
            </summary>
        </member>
        <member name="P:Apq.Config.ConfigChain.Root">
            <summary>
            不可使用
            </summary>
        </member>
        <member name="P:Apq.Config.ConfigChain.Item(System.String)">
            <summary>
            不可使用
            </summary>
        </member>
        <member name="T:BigInteger">
            <summary>
            大数
            </summary>
        </member>
        <member name="F:BigInteger.primesBelow2000">
            <summary>
            2000以内的质数
            </summary>
        </member>
        <member name="F:BigInteger.dataLength">
            <summary>
            number of actual chars used
            </summary>
        </member>
        <member name="M:BigInteger.#ctor">
            <summary>
            BigInteger
            </summary>
        </member>
        <member name="M:BigInteger.#ctor(System.Int64)">
            <summary>
            BigInteger
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:BigInteger.#ctor(System.UInt64)">
            <summary>
            BigInteger
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:BigInteger.#ctor(BigInteger)">
            <summary>
            BigInteger
            </summary>
            <param name="bi"></param>
        </member>
        <member name="M:BigInteger.#ctor(System.String,System.Int32)">
            <summary>
            BigInteger
            </summary>
            <param name="value"></param>
            <param name="radix"></param>
        </member>
        <member name="M:BigInteger.#ctor(System.Byte[])">
            <summary>
            BigInteger
            </summary>
            <param name="inData"></param>
        </member>
        <member name="M:BigInteger.#ctor(System.Byte[],System.Int32)">
            <summary>
            BigInteger
            </summary>
            <param name="inData"></param>
            <param name="inLen"></param>
        </member>
        <member name="M:BigInteger.#ctor(System.UInt32[])">
            <summary>
            BigInteger
            </summary>
            <param name="inData"></param>
        </member>
        <member name="M:BigInteger.op_Implicit(System.Int64)~BigInteger">
            <summary>
            类型转换
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:BigInteger.op_Implicit(System.UInt64)~BigInteger">
            <summary>
            类型转换
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:BigInteger.op_Implicit(System.Int32)~BigInteger">
            <summary>
            类型转换
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:BigInteger.op_Implicit(System.UInt32)~BigInteger">
            <summary>
            类型转换
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:BigInteger.op_Addition(BigInteger,BigInteger)">
            <summary>
            加法
            </summary>
            <param name="bi1"></param>
            <param name="bi2"></param>
            <returns></returns>
        </member>
        <member name="M:BigInteger.op_Increment(BigInteger)">
            <summary>
            自增
            </summary>
            <param name="bi1"></param>
            <returns></returns>
        </member>
        <member name="M:BigInteger.op_Subtraction(BigInteger,BigInteger)">
            <summary>
            减法
            </summary>
            <param name="bi1"></param>
            <param name="bi2"></param>
            <returns></returns>
        </member>
        <member name="M:BigInteger.op_Decrement(BigInteger)">
            <summary>
            自减
            </summary>
            <param name="bi1"></param>
            <returns></returns>
        </member>
        <member name="M:BigInteger.op_Multiply(BigInteger,BigInteger)">
            <summary>
            乘法
            </summary>
            <param name="bi1"></param>
            <param name="bi2"></param>
            <returns></returns>
        </member>
        <member name="M:BigInteger.op_LeftShift(BigInteger,System.Int32)">
            <summary>
            左移
            </summary>
            <param name="bi1"></param>
            <param name="shiftVal"></param>
            <returns></returns>
        </member>
        <member name="M:BigInteger.op_RightShift(BigInteger,System.Int32)">
            <summary>
            右移
            </summary>
            <param name="bi1"></param>
            <param name="shiftVal"></param>
            <returns></returns>
        </member>
        <member name="M:BigInteger.op_OnesComplement(BigInteger)">
            <summary>
            取反
            </summary>
            <param name="bi1"></param>
            <returns></returns>
        </member>
        <member name="M:BigInteger.op_UnaryNegation(BigInteger)">
            <summary>
            取负
            </summary>
            <param name="bi1"></param>
            <returns></returns>
        </member>
        <member name="M:BigInteger.op_Equality(BigInteger,BigInteger)">
            <summary>
            等于
            </summary>
            <param name="bi1"></param>
            <param name="bi2"></param>
            <returns></returns>
        </member>
        <member name="M:BigInteger.op_Inequality(BigInteger,BigInteger)">
            <summary>
            不等于
            </summary>
            <param name="bi1"></param>
            <param name="bi2"></param>
            <returns></returns>
        </member>
        <member name="M:BigInteger.Equals(System.Object)">
            <summary>
            Equals
            </summary>
            <param name="o"></param>
            <returns></returns>
        </member>
        <member name="M:BigInteger.GetHashCode">
            <summary>
            GetHashCode
            </summary>
            <returns></returns>
        </member>
        <member name="M:BigInteger.op_GreaterThan(BigInteger,BigInteger)">
            <summary>
            大于
            </summary>
            <param name="bi1"></param>
            <param name="bi2"></param>
            <returns></returns>
        </member>
        <member name="M:BigInteger.op_LessThan(BigInteger,BigInteger)">
            <summary>
            小于
            </summary>
            <param name="bi1"></param>
            <param name="bi2"></param>
            <returns></returns>
        </member>
        <member name="M:BigInteger.op_GreaterThanOrEqual(BigInteger,BigInteger)">
            <summary>
            大于等于
            </summary>
            <param name="bi1"></param>
            <param name="bi2"></param>
            <returns></returns>
        </member>
        <member name="M:BigInteger.op_LessThanOrEqual(BigInteger,BigInteger)">
            <summary>
            小于等于
            </summary>
            <param name="bi1"></param>
            <param name="bi2"></param>
            <returns></returns>
        </member>
        <member name="M:BigInteger.op_Division(BigInteger,BigInteger)">
            <summary>
            除法
            </summary>
            <param name="bi1"></param>
            <param name="bi2"></param>
            <returns></returns>
        </member>
        <member name="M:BigInteger.op_Modulus(BigInteger,BigInteger)">
            <summary>
            取余
            </summary>
            <param name="bi1"></param>
            <param name="bi2"></param>
            <returns></returns>
        </member>
        <member name="M:BigInteger.op_BitwiseAnd(BigInteger,BigInteger)">
            <summary>
            位于
            </summary>
            <param name="bi1"></param>
            <param name="bi2"></param>
            <returns></returns>
        </member>
        <member name="M:BigInteger.op_BitwiseOr(BigInteger,BigInteger)">
            <summary>
            位或
            </summary>
            <param name="bi1"></param>
            <param name="bi2"></param>
            <returns></returns>
        </member>
        <member name="M:BigInteger.op_ExclusiveOr(BigInteger,BigInteger)">
            <summary>
            位或
            </summary>
            <param name="bi1"></param>
            <param name="bi2"></param>
            <returns></returns>
        </member>
        <member name="M:BigInteger.max(BigInteger)">
            <summary>
            取大
            </summary>
            <param name="bi"></param>
            <returns></returns>
        </member>
        <member name="M:BigInteger.min(BigInteger)">
            <summary>
            取小
            </summary>
            <param name="bi"></param>
            <returns></returns>
        </member>
        <member name="M:BigInteger.abs">
            <summary>
            取绝对值
            </summary>
            <returns></returns>
        </member>
        <member name="M:BigInteger.ToString">
            <summary>
            ToString(10进制)
            </summary>
            <returns></returns>
        </member>
        <member name="M:BigInteger.ToString(System.Int32)">
            <summary>
            ToString
            </summary>
            <param name="radix">进制</param>
            <returns></returns>
        </member>
        <member name="M:BigInteger.ToHexString">
            <summary>
            16进制
            </summary>
            <returns></returns>
        </member>
        <member name="M:BigInteger.modPow(BigInteger,BigInteger)">
            <summary>
            冥
            </summary>
            <param name="exp"></param>
            <param name="n"></param>
            <returns></returns>
        </member>
        <member name="M:BigInteger.gcd(BigInteger)">
            <summary>
            (?)最大公约数
            </summary>
            <param name="bi"></param>
            <returns></returns>
        </member>
        <member name="M:BigInteger.genRandomBits(System.Int32,System.Random)">
            <summary>
            (?)计算随机位数
            </summary>
            <param name="bits"></param>
            <param name="rand"></param>
        </member>
        <member name="M:BigInteger.bitCount">
            <summary>
            获取位计数
            </summary>
            <returns></returns>
        </member>
        <member name="M:BigInteger.FermatLittleTest(System.Int32)">
            <summary>
            (?)
            </summary>
            <param name="confidence"></param>
            <returns></returns>
        </member>
        <member name="M:BigInteger.RabinMillerTest(System.Int32)">
            <summary>
            (?)
            </summary>
            <param name="confidence"></param>
            <returns></returns>
        </member>
        <member name="M:BigInteger.SolovayStrassenTest(System.Int32)">
            <summary>
            (?)
            </summary>
            <param name="confidence">置信水平</param>
            <returns></returns>
        </member>
        <member name="M:BigInteger.LucasStrongTest">
            <summary>
            (?)
            </summary>
            <returns></returns>
        </member>
        <member name="M:BigInteger.isProbablePrime(System.Int32)">
            <summary>
            是否可能质数
            </summary>
            <param name="confidence">置信水平</param>
            <returns></returns>
        </member>
        <member name="M:BigInteger.isProbablePrime">
            <summary>
            是否可能质数
            </summary>
            <returns></returns>
        </member>
        <member name="M:BigInteger.IntValue">
            <summary>
            获取低4字节返回整数
            </summary>
            <returns></returns>
        </member>
        <member name="M:BigInteger.LongValue">
            <summary>
            获取低8字节返回长整数
            </summary>
            <returns></returns>
        </member>
        <member name="M:BigInteger.Jacobi(BigInteger,BigInteger)">
            <summary>
            (?)
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:BigInteger.genPseudoPrime(System.Int32,System.Int32,System.Random)">
            <summary>
            计算伪质数
            </summary>
            <param name="bits"></param>
            <param name="confidence"></param>
            <param name="rand"></param>
            <returns></returns>
        </member>
        <member name="M:BigInteger.genCoPrime(System.Int32,System.Random)">
            <summary>
            计算质数
            </summary>
            <param name="bits"></param>
            <param name="rand"></param>
            <returns></returns>
        </member>
        <member name="M:BigInteger.modInverse(BigInteger)">
            <summary>
            (?)
            </summary>
            <param name="modulus"></param>
            <returns></returns>
        </member>
        <member name="M:BigInteger.getBytes">
            <summary>
            getBytes
            </summary>
            <returns></returns>
        </member>
        <member name="M:BigInteger.setBit(System.UInt32)">
            <summary>
            将指定位的值置为1
            </summary>
            <param name="bitNum"></param>
        </member>
        <member name="M:BigInteger.unsetBit(System.UInt32)">
            <summary>
            将指定位的值置为0
            </summary>
            <param name="bitNum"></param>
        </member>
        <member name="M:BigInteger.sqrt">
            <summary>
            开根
            </summary>
            <returns></returns>
        </member>
        <member name="M:BigInteger.LucasSequence(BigInteger,BigInteger,BigInteger,BigInteger)">
            <summary>
            (?)
            </summary>
            <param name="P"></param>
            <param name="Q"></param>
            <param name="k"></param>
            <param name="n"></param>
            <returns></returns>
        </member>
        <member name="M:BigInteger.LucasSequenceHelper(BigInteger,BigInteger,BigInteger,BigInteger,BigInteger,System.Int32)">
            <summary>
            (?)
            </summary>
            <param name="P"></param>
            <param name="Q"></param>
            <param name="k"></param>
            <param name="n"></param>
            <param name="constant"></param>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:BigInteger.MulDivTest(System.Int32)">
            <summary>
            测试/,%,*,+
            </summary>
            <param name="rounds"></param>
        </member>
        <member name="M:BigInteger.RSATest(System.Int32)">
            <summary>
            测试RSA
            </summary>
            <param name="rounds"></param>
        </member>
        <member name="M:BigInteger.RSATest2(System.Int32)">
            <summary>
            RSATest2
            </summary>
            <param name="rounds"></param>
        </member>
        <member name="M:BigInteger.SqrtTest(System.Int32)">
            <summary>
            SqrtTest
            </summary>
            <param name="rounds"></param>
        </member>
        <member name="T:Apq.Data.Common.DbParameterCollectionHelper">
            <summary>
            DbParameterCollectionHelper
            </summary>
        </member>
        <member name="M:Apq.Data.Common.DbParameterCollectionHelper.#ctor(System.Data.Common.DbParameterCollection)">
            <summary>
            DbParameterCollectionHelper
            </summary>
            <param name="Parameters"></param>
        </member>
        <member name="P:Apq.Data.Common.DbParameterCollectionHelper.Parameters">
            <summary>
            获取参数集合
            </summary>
        </member>
        <member name="P:Apq.Data.Common.DbParameterCollectionHelper.Item(System.String)">
            <summary>
            获取或设置指定参数名的参数
            </summary>
            <param name="ParameterName">参数名</param>
            <returns></returns>
        </member>
        <member name="T:Apq.Convert">
            <summary>
            将一个基本数据类型转换为另一个基本数据类型。
            </summary>
        </member>
        <member name="M:Apq.Convert.ChangeType``1(System.Object)">
            <summary>
            [无异常]强制类型转换,失败时返回 default(T)
            </summary>
            <typeparam name="T">输出类型</typeparam>
            <param name="obj">原始对象</param>
            <returns></returns>
        </member>
        <member name="M:Apq.Convert.ChangeType``1(System.Object,``0)">
            <summary>
            [无异常]强制类型转换,失败时返回 Default
            </summary>
            <typeparam name="T">输出类型</typeparam>
            <param name="obj">原始对象</param>
            <param name="Default">默认值</param>
            <returns></returns>
        </member>
        <member name="M:Apq.Convert.ChangeType(System.Object,System.Type,System.Object)">
            <summary>
            [无异常]强制类型转换,失败时返回默认值
            </summary>
            <param name="obj">原始对象</param>
            <param name="type">输出类型</param>
            <param name="Default">默认值</param>
            <returns></returns>
        </member>
        <member name="M:Apq.Convert.LikeDBNull(System.Object)">
            <summary>
            返回指定对象是否与 DBNull 具有相似意义[仿JScrip]{null,DBNull,System.Convert.IsDBNull(obj)}
            </summary>
            <returns></returns>
        </member>
        <member name="M:Apq.Convert.IsNull(System.Object)">
            <summary>
            返回指定对象是否为null{null,DBNull}
            </summary>
            <returns></returns>
        </member>
        <member name="M:Apq.Convert.HasMean(System.Object)">
            <summary>
            返回指定对象是否有意义,不为{null,DBNull,string.Empty,false}
            </summary>
            <returns></returns>
        </member>
        <member name="M:Apq.Convert.ToJSO(System.String)">
            <summary>
            将服务端字符串转为客户端字符串
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Apq.Convert.ToExcelObject(System.Object)">
            <summary>
            将各类型值转为 Excel 能接受的值
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="T:Apq.Net.ServicePointManager">
            <summary>
            ServicePointManager
            </summary>
        </member>
        <member name="M:Apq.Net.ServicePointManager.ValidateServerCertificate(System.Object,System.Security.Cryptography.X509Certificates.X509Certificate,System.Security.Cryptography.X509Certificates.X509Chain,System.Net.Security.SslPolicyErrors)">
            <summary>
            用于忽略证书错误
            </summary>
            <param name="sender"></param>
            <param name="certificate"></param>
            <param name="chain"></param>
            <param name="sslPolicyErrors"></param>
            <returns></returns>
        </member>
        <member name="T:Apq.Editor.ITextEditor">
            <summary>
            IEditor
            </summary>
        </member>
        <member name="M:Apq.Editor.ITextEditor.Undo">
            <summary>
            撤消
            </summary>
        </member>
        <member name="M:Apq.Editor.ITextEditor.Redo">
            <summary>
            重做
            </summary>
        </member>
        <member name="M:Apq.Editor.ITextEditor.Copy">
            <summary>
            复制
            </summary>
        </member>
        <member name="M:Apq.Editor.ITextEditor.Paste">
            <summary>
            粘贴
            </summary>
        </member>
        <member name="M:Apq.Editor.ITextEditor.Delete">
            <summary>
            删除
            </summary>
        </member>
        <member name="M:Apq.Editor.ITextEditor.SelectAll">
            <summary>
            全选
            </summary>
        </member>
        <member name="M:Apq.Editor.ITextEditor.Reverse">
            <summary>
            反选
            </summary>
        </member>
        <member name="T:Apq.GlobalObject">
            <summary>
            全局对象
            </summary>
        </member>
        <member name="P:Apq.GlobalObject.TheAssembly">
            <summary>
            该程序集配置文件(程序集名.后缀.xml)
            </summary>
        </member>
        <member name="P:Apq.GlobalObject.XmlAsmConfig">
            <summary>
            该程序集配置文件(程序集名.后缀.xml)
            </summary>
        </member>
        <member name="P:Apq.GlobalObject.XmlUserConfig">
            <summary>
            该程序集用户配置文件(程序集名.后缀.xml)
            </summary>
        </member>
        <member name="P:Apq.GlobalObject.XmlConfigChain">
            <summary>
            该程序集配置文件链
            </summary>
        </member>
        <member name="P:Apq.GlobalObject.ApqLog">
            <summary>
            Logger
            </summary>
        </member>
        <member name="P:Apq.GlobalObject.AsmConfigs">
            <summary>
            程序集配置文件集合
            </summary>
        </member>
        <member name="P:Apq.GlobalObject.UserConfigs">
            <summary>
            用户配置文件集合
            </summary>
        </member>
        <member name="P:Apq.GlobalObject.Configs">
            <summary>
            配置文件集合
            </summary>
        </member>
        <member name="P:Apq.GlobalObject.NamedInstances">
            <summary>
            命名实例集合
            </summary>
        </member>
        <member name="P:Apq.GlobalObject.SingletonInstances">
            <summary>
            单态实例集合
            </summary>
        </member>
        <member name="P:Apq.GlobalObject.Locks">
            <summary>
            资源锁对象集合(供lock使用)
            </summary>
        </member>
        <member name="T:Apq.Config.XmlConfig">
            <summary>
            Xml 配置文件
            </summary>
        </member>
        <member name="M:Apq.Config.XmlConfig.#ctor">
            <summary>
            Xml 配置文件
            </summary>
        </member>
        <member name="M:Apq.Config.XmlConfig.Save">
            <summary>
            保存配置文件
            </summary>
        </member>
        <member name="M:Apq.Config.XmlConfig.SaveAs(System.String)">
            <summary>
            另存为
            </summary>
            <param name="Path"></param>
        </member>
        <member name="M:Apq.Config.XmlConfig.GetValueNames">
            <summary>
            获取配置名列表
            </summary>
            <returns></returns>
        </member>
        <member name="P:Apq.Config.XmlConfig.Path">
            <summary>
            获取或设置文件路径
            </summary>
        </member>
        <member name="P:Apq.Config.XmlConfig.Root">
            <summary>
            获取或设置根(使用XPath,应该指向一个确定的结点)
            </summary>
        </member>
        <member name="P:Apq.Config.XmlConfig.Item(System.String,System.String)">
            <summary>
            获取或设置配置[推荐使用]
            </summary>
            <param name="ClassName">类名</param>
            <param name="PropertyName">属性名(特殊值:InnerText)</param>
            <returns></returns>
        </member>
        <member name="P:Apq.Config.XmlConfig.Item(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            获取或设置集合弄配置
            </summary>
            <param name="ClassName">类名</param>
            <param name="CollectionElementName">集合元素名</param>
            <param name="ItemElementName">子项元素名</param>
            <param name="ItemName">子项name属性值</param>
            <param name="PropertyName">属性名(特殊值:InnerText)</param>
            <returns></returns>
        </member>
        <member name="T:Apq.Text.StringBuilder">
            <summary>
            StringBuilder
            </summary>
        </member>
        <member name="M:Apq.Text.StringBuilder.Append(System.Text.StringBuilder,System.Object[])">
            <summary>
            在指定 StringBuilder 后添加连续字符串
            </summary>
            <param name="sb">StringBuilder</param>
            <param name="ary">需要添加的对象(调用其 ToString() 方法)</param>
        </member>
        <member name="T:Apq.String">
            <summary>
            Apq.String
            </summary>
        </member>
        <member name="F:Apq.String.SimpleChars">
            <summary>
            易于辨识的字母数字范围(小写优先)
            </summary>
        </member>
        <member name="F:Apq.String.SimpleChars2">
            <summary>
            易于辨识的字母数字范围(大写优先)
            </summary>
        </member>
        <member name="M:Apq.String.Random(System.Int32,System.Boolean,System.Nullable{System.Int32},System.Char[])">
            <summary>
            生成随机字符串
            </summary>
            <param name="Length">指定长度</param>
            <param name="Repeat">是否允许重复</param>
            <param name="Seed">种子值[只需要第0个值,null表示使用默认种子值]</param>
            <param name="All">字符集</param>
            <returns></returns>
        </member>
        <member name="M:Apq.String.Random(System.Int32,System.Boolean,System.Nullable{System.Int32},System.String)">
            <summary>
            生成随机字符串
            </summary>
            <param name="Length">指定长度</param>
            <param name="Repeat">是否允许重复</param>
            <param name="Seed">种子值[只需要第0个值,null表示使用默认种子值]</param>
            <param name="All">字符集</param>
            <returns></returns>
        </member>
        <member name="M:Apq.String.Random(System.UInt32,System.Int32,System.Boolean,System.Nullable{System.Int32},System.Char[])">
            <summary>
            返回指定数量,指定长度的随机字符串
            </summary>
            <param name="Count">指定的数量</param>
            <param name="Length">指定的长度</param>
            <param name="Repeat">是否允许重复</param>
            <param name="Seed">种子值[只需要第0个值,null表示使用默认种子值]</param>
            <param name="All">字符集</param>
            <returns></returns>
        </member>
        <member name="M:Apq.String.Random(System.UInt32,System.Int32,System.Boolean,System.Nullable{System.Int32},System.String)">
            <summary>
            返回指定数量,指定长度的随机字符串
            </summary>
            <param name="Count">指定的数量</param>
            <param name="Length">指定的长度</param>
            <param name="Repeat">是否允许重复</param>
            <param name="Seed">种子值[只需要第0个值,null表示使用默认种子值]</param>
            <param name="All">字符集</param>
            <returns></returns>
        </member>
        <member name="T:Apq.Runtime.Serialization.Formatters.Binary.BinaryFormatter">
            <summary>
            BinaryFormatter
            </summary>
        </member>
        <member name="M:Apq.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Serialize(System.Object)">
            <summary>
            简单序列化
            </summary>
            <param name="obj">对象</param>
            <returns></returns>
        </member>
        <member name="M:Apq.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Deserialize(System.Byte[])">
            <summary>
            简单反序列化
            </summary>
            <param name="bs"></param>
            <returns></returns>
        </member>
        <member name="T:Apq.DllImports.Kernel32">
            <summary>
            Kernel32
            </summary>
        </member>
        <member name="M:Apq.DllImports.Kernel32.WritePrivateProfileString(System.String,System.String,System.String,System.String)">
            <summary>
            写
            </summary>
            <param name="section">INI文件中的段落</param>
            <param name="key">INI文件中的关键字</param>
            <param name="val">INI文件中关键字的值</param>
            <param name="filePath">INI文件的完整的路径和名称</param>
            <returns></returns>
        </member>
        <member name="M:Apq.DllImports.Kernel32.GetPrivateProfileString(System.String,System.String,System.String,System.Text.StringBuilder,System.Int32,System.String)">
            <summary>
            读取
            </summary>
            <param name="section">INI文件中的段落名称</param>
            <param name="key">INI文件中的关键字</param>
            <param name="def">无法读取时候时候的缺省值</param>
            <param name="retVal">读取值</param>
            <param name="size">值的大小</param>
            <param name="filePath">INI文件的完整路径和名称</param>
            <returns></returns>
        </member>
        <member name="M:Apq.DllImports.Kernel32.GetDriveType(Apq.String)">
            <summary>
            获取驱动类型
            </summary>
            <param name="driveLetter"></param>
            <returns></returns>
        </member>
        <member name="M:Apq.DllImports.Kernel32.GetVolumeInformation(Apq.String,System.Byte[],System.Int32,System.Int32@,System.Int32@,System.Int32@,System.Byte[],System.Int32)">
            <summary>
            获取卷信息
            </summary>
            <param name="root"></param>
            <param name="name"></param>
            <param name="nameLen"></param>
            <param name="serial"></param>
            <param name="maxCompLen"></param>
            <param name="flags"></param>
            <param name="fileSysName"></param>
            <param name="fileSysNameLen"></param>
            <returns></returns>
        </member>
        <member name="M:Apq.DllImports.Kernel32.Sleep(System.Int32)">
            <summary>
            进程暂停毫秒数
            </summary>
        </member>
        <member name="T:Apq.Configuration.Configs">
            <summary>
            提供配置文件管理
            </summary>
        </member>
        <member name="M:Apq.Configuration.Configs.GetAppConfigFolder(System.Reflection.Assembly)">
            <summary>
            获取 AppConfig 配置文件夹
            </summary>
            <param name="Assembly">程序集</param>
            <returns></returns>
        </member>
        <member name="M:Apq.Configuration.Configs.GetConfig(System.String)">
            <summary>
            获取一个配置文件
            </summary>
            <param name="Path">配置文件的完整路径</param>
            <returns></returns>
        </member>
        <member name="M:Apq.Configuration.Configs.GetConfig(System.Reflection.Assembly)">
            <summary>
            获取一个程序集的配置文件
            </summary>
            <param name="Assembly">程序集</param>
            <returns></returns>
        </member>
        <member name="M:Apq.Configuration.Configs.SaveAll">
            <summary>
            保存所有配置文件
            </summary>
        </member>
        <member name="T:Apq.Collections.IList">
            <summary>
            非泛型集合
            </summary>
        </member>
        <member name="F:Apq.Collections.IList.list">
            <summary>
            System.Collections.IList
            </summary>
        </member>
        <member name="F:Apq.Collections.IList.MayAll">
            <summary>
            是否启用所有事件
            </summary>
        </member>
        <member name="M:Apq.Collections.IList.#ctor(System.Collections.IList)">
            <summary>
            装饰
            </summary>
            <param name="List"></param>
        </member>
        <member name="M:Apq.Collections.IList.Add(System.Object)">
            <summary>
            将某项添加到 System.Collections.IList 中。
            </summary>
            <param name="value">要添加到 System.Collections.IList 的 System.Object。</param>
            <returns>新元素的插入位置。</returns>
        </member>
        <member name="M:Apq.Collections.IList.Clear">
            <summary>
            从 System.Collections.IList 中移除所有项。
            </summary>
        </member>
        <member name="M:Apq.Collections.IList.Contains(System.Object)">
            <summary>
            确定 System.Collections.IList 是否包含特定值。
            </summary>
            <param name="value">要在 System.Collections.IList 中查找的 System.Object。</param>
            <returns>如果在 System.Collections.IList 中找到 System.Object，则为 true；否则为 false。</returns>
        </member>
        <member name="M:Apq.Collections.IList.IndexOf(System.Object)">
            <summary>
            确定 System.Collections.IList 中特定项的索引。
            </summary>
            <param name="value">要在 System.Collections.IList 中查找的 System.Object。</param>
            <returns>如果在列表中找到，则为 value 的索引；否则为 -1。</returns>
        </member>
        <member name="M:Apq.Collections.IList.Insert(System.Int32,System.Object)">
            <summary>
            将一个项插入指定索引处的 System.Collections.IList。
            </summary>
            <param name="index">从零开始的索引，应在该位置插入 value。</param>
            <param name="value">要插入 System.Collections.IList 中的 System.Object。</param>
        </member>
        <member name="M:Apq.Collections.IList.Remove(System.Object)">
            <summary>
            从 System.Collections.IList 中移除特定对象的第一个匹配项。
            </summary>
            <param name="value">要从 System.Collections.IList 移除的 System.Object。</param>
        </member>
        <member name="M:Apq.Collections.IList.RemoveAt(System.Int32)">
            <summary>
            移除指定索引处的 System.Collections.IList 项。
            </summary>
            <param name="index">从零开始的索引（属于要移除的项）。</param>
        </member>
        <member name="M:Apq.Collections.IList.CopyTo(System.Array,System.Int32)">
            <summary>
            从特定的 System.Array 索引处开始，将 System.Collections.ICollection 的元素复制到一个 System.Array 中。
            </summary>
            <param name="array">作为从 System.Collections.ICollection 复制的元素的目标位置的一维 System.Array。System.Array 必须具有从零开始的索引。</param>
            <param name="index">array 中从零开始的索引，从此处开始复制。</param>
        </member>
        <member name="M:Apq.Collections.IList.GetEnumerator">
            <summary>
            返回一个循环访问集合的枚举数。
            </summary>
            <returns>可用于循环访问集合的 System.Collections.IEnumerator 对象。</returns>
        </member>
        <member name="F:Apq.Collections.IList.MayListChanged">
            <summary>
            是否启用 ListChanged
            </summary>
        </member>
        <member name="M:Apq.Collections.IList.OnListChanged(System.ComponentModel.ListChangedEventArgs)">
            <summary>
            引发 ListChanged
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Apq.Collections.IList.Contains(System.Collections.IList,System.Object)">
            <summary>
            
            </summary>
            <param name="list"></param>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="P:Apq.Collections.IList.IsFixedSize">
            <summary>
            获取一个值，该值指示 System.Collections.IList 是否具有固定大小。
            </summary>
        </member>
        <member name="P:Apq.Collections.IList.IsReadOnly">
            <summary>
            获取一个值，该值指示 System.Collections.IList 是否为只读。
            </summary>
        </member>
        <member name="P:Apq.Collections.IList.Item(System.Int32)">
            <summary>
            获取或设置指定索引处的元素。
            </summary>
            <param name="index">要获得或设置的元素从零开始的索引。</param>
            <returns>指定索引处的元素。</returns>
        </member>
        <member name="P:Apq.Collections.IList.Count">
            <summary>
            获取 System.Collections.ICollection 中包含的元素数。
            </summary>
        </member>
        <member name="P:Apq.Collections.IList.IsSynchronized">
            <summary>
            获取一个值，该值指示是否同步对 System.Collections.ICollection 的访问（线程安全）。
            </summary>
        </member>
        <member name="P:Apq.Collections.IList.SyncRoot">
            <summary>
            获取可用于同步 System.Collections.ICollection 访问的对象。
            </summary>
        </member>
        <member name="E:Apq.Collections.IList.ListChanged">
            <summary>
            ListChanged 事件
            </summary>
        </member>
        <member name="T:Apq.Xml.XmlElement">
            <summary>
            XmlElement
            </summary>
        </member>
        <member name="T:Apq.Sim.Mouse">
            <summary>
            模拟鼠标
            </summary>
        </member>
        <member name="M:Apq.Sim.Mouse.Move(System.Int32,System.Int32)">
            <summary>
            移动鼠标
            </summary>
            <param name="From_Handle_ToInt32">From控件Handle</param>
            <param name="To_Handle_ToInt32">To控件Handle</param>
        </member>
        <member name="M:Apq.Sim.Mouse.DefaultRightButton">
            <summary>
            设置鼠标右键为确认(左手鼠标)
            </summary>
        </member>
        <member name="M:Apq.Sim.Mouse.DefaultLeftButton">
            <summary>
            设置鼠标左键为确认(右手鼠标)
            </summary>
        </member>
        <member name="M:Apq.Sim.Mouse.LeftDown">
            <summary>
            左键按下
            </summary>
        </member>
        <member name="M:Apq.Sim.Mouse.LeftUp">
            <summary>
            左键放开
            </summary>
        </member>
        <member name="M:Apq.Sim.Mouse.LeftClick">
            <summary>
            单击左键
            </summary>
        </member>
        <member name="M:Apq.Sim.Mouse.MiddleDown">
            <summary>
            中键按下
            </summary>
        </member>
        <member name="M:Apq.Sim.Mouse.MiddleUp">
            <summary>
            中键放开
            </summary>
        </member>
        <member name="M:Apq.Sim.Mouse.MiddleClick">
            <summary>
            单击中键
            </summary>
        </member>
        <member name="M:Apq.Sim.Mouse.RightDown">
            <summary>
            右键按下
            </summary>
        </member>
        <member name="M:Apq.Sim.Mouse.RightUp">
            <summary>
            右键放开
            </summary>
        </member>
        <member name="M:Apq.Sim.Mouse.RightClick">
            <summary>
            单击右键
            </summary>
        </member>
        <member name="P:Apq.Sim.Mouse.Type">
            <summary>
            获取鼠标类型
            </summary>
        </member>
        <member name="P:Apq.Sim.Mouse.DoubleClickTime">
            <summary>
            获取或设置鼠标双击时间
            </summary>
        </member>
        <member name="T:Apq.Net.HttpWebRequest">
            <summary>
            Apq.Net.HttpWebRequest
            </summary>
        </member>
        <member name="M:Apq.Net.HttpWebRequest.Request(System.Text.Encoding,System.String,System.String,System.String,System.Net.CookieContainer,System.String)">
            <summary>
            以指定编码发送请求到一 Url
            </summary>
            <param name="eEncoding">编码</param>
            <param name="Url"></param>
            <param name="inData">内容</param>
            <param name="Method">GET 或 POST</param>
            <param name="cc"></param>
            <param name="ContentType"></param>
            <returns></returns>
        </member>
        <member name="M:Apq.Net.HttpWebRequest.Request(System.String,System.String,System.String)">
            <summary>
            以默认编码 UTF8 发送请求到一 Url
            </summary>
            <param name="Url"></param>
            <param name="inData">内容</param>
            <param name="Method">GET 或 POST</param>
            <returns></returns>
        </member>
        <member name="M:Apq.Net.HttpWebRequest.Request(System.Text.Encoding,System.String,System.String,System.String)">
            <summary>
            以指定编码发送请求到一 Url
            </summary>
            <param name="eEncoding">编码</param>
            <param name="Url"></param>
            <param name="inData">内容</param>
            <param name="Method">GET 或 POST</param>
            <returns></returns>
        </member>
        <member name="M:Apq.Net.HttpWebRequest.DownFile(System.String,System.String)">
            <summary>
            文件下载
            </summary>
            <param name="Url">下载路径</param>
            <param name="FileName">保存路径</param>
        </member>
    </members>
</doc>
