//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行库版本:2.0.50727.1433
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码由 wsdl 自动生成, Version=2.0.50727.42。
// 
namespace WS.QQUnbindTXZ {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="UserInfoSoap", Namespace="http://lwservice.passport.21mmo.com/")]
    public partial class UserInfo : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetUserQuestionOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckUserAnswerOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserSafeEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserSafeEmailAndCheckOperationCompleted;
        
        private System.Threading.SendOrPostCallback RegisterHX2AccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback RegisterQQHXAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConfirmQQHXAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConfirmQQHXUnBindOperationCompleted;
        
        private System.Threading.SendOrPostCallback UnBindQQHXAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetQQHXAccountStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckUserNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckSafeCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckUserNameAndPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckSafeCodeAndPIDOperationCompleted;
        
        /// <remarks/>
        public UserInfo() {
            string urlSetting = System.Configuration.ConfigurationManager.AppSettings["Url"];
            if ((urlSetting != null)) {
                this.Url = urlSetting;
            }
            else {
                this.Url = "http://lwservice.passport.21mmo.com:1019/userinfo.asmx";
            }
        }
        
        /// <remarks/>
        public event GetUserQuestionCompletedEventHandler GetUserQuestionCompleted;
        
        /// <remarks/>
        public event CheckUserAnswerCompletedEventHandler CheckUserAnswerCompleted;
        
        /// <remarks/>
        public event GetUserSafeEmailCompletedEventHandler GetUserSafeEmailCompleted;
        
        /// <remarks/>
        public event GetUserSafeEmailAndCheckCompletedEventHandler GetUserSafeEmailAndCheckCompleted;
        
        /// <remarks/>
        public event RegisterHX2AccountCompletedEventHandler RegisterHX2AccountCompleted;
        
        /// <remarks/>
        public event RegisterQQHXAccountCompletedEventHandler RegisterQQHXAccountCompleted;
        
        /// <remarks/>
        public event ConfirmQQHXAccountCompletedEventHandler ConfirmQQHXAccountCompleted;
        
        /// <remarks/>
        public event ConfirmQQHXUnBindCompletedEventHandler ConfirmQQHXUnBindCompleted;
        
        /// <remarks/>
        public event UnBindQQHXAccountCompletedEventHandler UnBindQQHXAccountCompleted;
        
        /// <remarks/>
        public event GetQQHXAccountStatusCompletedEventHandler GetQQHXAccountStatusCompleted;
        
        /// <remarks/>
        public event CheckUserNameCompletedEventHandler CheckUserNameCompleted;
        
        /// <remarks/>
        public event CheckSafeCodeCompletedEventHandler CheckSafeCodeCompleted;
        
        /// <remarks/>
        public event CheckUserNameAndPasswordCompletedEventHandler CheckUserNameAndPasswordCompleted;
        
        /// <remarks/>
        public event CheckSafeCodeAndPIDCompletedEventHandler CheckSafeCodeAndPIDCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://lwservice.passport.21mmo.com/GetUserQuestion", RequestNamespace="http://lwservice.passport.21mmo.com/", ResponseNamespace="http://lwservice.passport.21mmo.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public QuestionResult GetUserQuestion(string userName) {
            object[] results = this.Invoke("GetUserQuestion", new object[] {
                        userName});
            return ((QuestionResult)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetUserQuestion(string userName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetUserQuestion", new object[] {
                        userName}, callback, asyncState);
        }
        
        /// <remarks/>
        public QuestionResult EndGetUserQuestion(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((QuestionResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserQuestionAsync(string userName) {
            this.GetUserQuestionAsync(userName, null);
        }
        
        /// <remarks/>
        public void GetUserQuestionAsync(string userName, object userState) {
            if ((this.GetUserQuestionOperationCompleted == null)) {
                this.GetUserQuestionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserQuestionOperationCompleted);
            }
            this.InvokeAsync("GetUserQuestion", new object[] {
                        userName}, this.GetUserQuestionOperationCompleted, userState);
        }
        
        private void OnGetUserQuestionOperationCompleted(object arg) {
            if ((this.GetUserQuestionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserQuestionCompleted(this, new GetUserQuestionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://lwservice.passport.21mmo.com/CheckUserAnswer", RequestNamespace="http://lwservice.passport.21mmo.com/", ResponseNamespace="http://lwservice.passport.21mmo.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CheckAnswerResult CheckUserAnswer(string userName, string answer1, string answer2, int checkFlags, string key) {
            object[] results = this.Invoke("CheckUserAnswer", new object[] {
                        userName,
                        answer1,
                        answer2,
                        checkFlags,
                        key});
            return ((CheckAnswerResult)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCheckUserAnswer(string userName, string answer1, string answer2, int checkFlags, string key, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CheckUserAnswer", new object[] {
                        userName,
                        answer1,
                        answer2,
                        checkFlags,
                        key}, callback, asyncState);
        }
        
        /// <remarks/>
        public CheckAnswerResult EndCheckUserAnswer(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((CheckAnswerResult)(results[0]));
        }
        
        /// <remarks/>
        public void CheckUserAnswerAsync(string userName, string answer1, string answer2, int checkFlags, string key) {
            this.CheckUserAnswerAsync(userName, answer1, answer2, checkFlags, key, null);
        }
        
        /// <remarks/>
        public void CheckUserAnswerAsync(string userName, string answer1, string answer2, int checkFlags, string key, object userState) {
            if ((this.CheckUserAnswerOperationCompleted == null)) {
                this.CheckUserAnswerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckUserAnswerOperationCompleted);
            }
            this.InvokeAsync("CheckUserAnswer", new object[] {
                        userName,
                        answer1,
                        answer2,
                        checkFlags,
                        key}, this.CheckUserAnswerOperationCompleted, userState);
        }
        
        private void OnCheckUserAnswerOperationCompleted(object arg) {
            if ((this.CheckUserAnswerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckUserAnswerCompleted(this, new CheckUserAnswerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://lwservice.passport.21mmo.com/GetUserSafeEmail", RequestNamespace="http://lwservice.passport.21mmo.com/", ResponseNamespace="http://lwservice.passport.21mmo.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GetEmailResult GetUserSafeEmail(string userName, string key) {
            object[] results = this.Invoke("GetUserSafeEmail", new object[] {
                        userName,
                        key});
            return ((GetEmailResult)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetUserSafeEmail(string userName, string key, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetUserSafeEmail", new object[] {
                        userName,
                        key}, callback, asyncState);
        }
        
        /// <remarks/>
        public GetEmailResult EndGetUserSafeEmail(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((GetEmailResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserSafeEmailAsync(string userName, string key) {
            this.GetUserSafeEmailAsync(userName, key, null);
        }
        
        /// <remarks/>
        public void GetUserSafeEmailAsync(string userName, string key, object userState) {
            if ((this.GetUserSafeEmailOperationCompleted == null)) {
                this.GetUserSafeEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserSafeEmailOperationCompleted);
            }
            this.InvokeAsync("GetUserSafeEmail", new object[] {
                        userName,
                        key}, this.GetUserSafeEmailOperationCompleted, userState);
        }
        
        private void OnGetUserSafeEmailOperationCompleted(object arg) {
            if ((this.GetUserSafeEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserSafeEmailCompleted(this, new GetUserSafeEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://lwservice.passport.21mmo.com/GetUserSafeEmailAndCheck", RequestNamespace="http://lwservice.passport.21mmo.com/", ResponseNamespace="http://lwservice.passport.21mmo.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GetEmailResult GetUserSafeEmailAndCheck(string userName, string key) {
            object[] results = this.Invoke("GetUserSafeEmailAndCheck", new object[] {
                        userName,
                        key});
            return ((GetEmailResult)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetUserSafeEmailAndCheck(string userName, string key, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetUserSafeEmailAndCheck", new object[] {
                        userName,
                        key}, callback, asyncState);
        }
        
        /// <remarks/>
        public GetEmailResult EndGetUserSafeEmailAndCheck(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((GetEmailResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserSafeEmailAndCheckAsync(string userName, string key) {
            this.GetUserSafeEmailAndCheckAsync(userName, key, null);
        }
        
        /// <remarks/>
        public void GetUserSafeEmailAndCheckAsync(string userName, string key, object userState) {
            if ((this.GetUserSafeEmailAndCheckOperationCompleted == null)) {
                this.GetUserSafeEmailAndCheckOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserSafeEmailAndCheckOperationCompleted);
            }
            this.InvokeAsync("GetUserSafeEmailAndCheck", new object[] {
                        userName,
                        key}, this.GetUserSafeEmailAndCheckOperationCompleted, userState);
        }
        
        private void OnGetUserSafeEmailAndCheckOperationCompleted(object arg) {
            if ((this.GetUserSafeEmailAndCheckCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserSafeEmailAndCheckCompleted(this, new GetUserSafeEmailAndCheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://lwservice.passport.21mmo.com/RegisterHX2Account", RequestNamespace="http://lwservice.passport.21mmo.com/", ResponseNamespace="http://lwservice.passport.21mmo.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result RegisterHX2Account(int userID, string userName, string password, string email, string realName, string pid, string ip, string key) {
            object[] results = this.Invoke("RegisterHX2Account", new object[] {
                        userID,
                        userName,
                        password,
                        email,
                        realName,
                        pid,
                        ip,
                        key});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRegisterHX2Account(int userID, string userName, string password, string email, string realName, string pid, string ip, string key, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RegisterHX2Account", new object[] {
                        userID,
                        userName,
                        password,
                        email,
                        realName,
                        pid,
                        ip,
                        key}, callback, asyncState);
        }
        
        /// <remarks/>
        public Result EndRegisterHX2Account(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void RegisterHX2AccountAsync(int userID, string userName, string password, string email, string realName, string pid, string ip, string key) {
            this.RegisterHX2AccountAsync(userID, userName, password, email, realName, pid, ip, key, null);
        }
        
        /// <remarks/>
        public void RegisterHX2AccountAsync(int userID, string userName, string password, string email, string realName, string pid, string ip, string key, object userState) {
            if ((this.RegisterHX2AccountOperationCompleted == null)) {
                this.RegisterHX2AccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegisterHX2AccountOperationCompleted);
            }
            this.InvokeAsync("RegisterHX2Account", new object[] {
                        userID,
                        userName,
                        password,
                        email,
                        realName,
                        pid,
                        ip,
                        key}, this.RegisterHX2AccountOperationCompleted, userState);
        }
        
        private void OnRegisterHX2AccountOperationCompleted(object arg) {
            if ((this.RegisterHX2AccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegisterHX2AccountCompleted(this, new RegisterHX2AccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://lwservice.passport.21mmo.com/RegisterQQHXAccount", RequestNamespace="http://lwservice.passport.21mmo.com/", ResponseNamespace="http://lwservice.passport.21mmo.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result RegisterQQHXAccount(int userID, string userName, string password, string email, string realName, string pid, string ip, string key) {
            object[] results = this.Invoke("RegisterQQHXAccount", new object[] {
                        userID,
                        userName,
                        password,
                        email,
                        realName,
                        pid,
                        ip,
                        key});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRegisterQQHXAccount(int userID, string userName, string password, string email, string realName, string pid, string ip, string key, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RegisterQQHXAccount", new object[] {
                        userID,
                        userName,
                        password,
                        email,
                        realName,
                        pid,
                        ip,
                        key}, callback, asyncState);
        }
        
        /// <remarks/>
        public Result EndRegisterQQHXAccount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void RegisterQQHXAccountAsync(int userID, string userName, string password, string email, string realName, string pid, string ip, string key) {
            this.RegisterQQHXAccountAsync(userID, userName, password, email, realName, pid, ip, key, null);
        }
        
        /// <remarks/>
        public void RegisterQQHXAccountAsync(int userID, string userName, string password, string email, string realName, string pid, string ip, string key, object userState) {
            if ((this.RegisterQQHXAccountOperationCompleted == null)) {
                this.RegisterQQHXAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegisterQQHXAccountOperationCompleted);
            }
            this.InvokeAsync("RegisterQQHXAccount", new object[] {
                        userID,
                        userName,
                        password,
                        email,
                        realName,
                        pid,
                        ip,
                        key}, this.RegisterQQHXAccountOperationCompleted, userState);
        }
        
        private void OnRegisterQQHXAccountOperationCompleted(object arg) {
            if ((this.RegisterQQHXAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegisterQQHXAccountCompleted(this, new RegisterQQHXAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://lwservice.passport.21mmo.com/ConfirmQQHXAccount", RequestNamespace="http://lwservice.passport.21mmo.com/", ResponseNamespace="http://lwservice.passport.21mmo.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result ConfirmQQHXAccount(int userID, int flag, string key) {
            object[] results = this.Invoke("ConfirmQQHXAccount", new object[] {
                        userID,
                        flag,
                        key});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginConfirmQQHXAccount(int userID, int flag, string key, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ConfirmQQHXAccount", new object[] {
                        userID,
                        flag,
                        key}, callback, asyncState);
        }
        
        /// <remarks/>
        public Result EndConfirmQQHXAccount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void ConfirmQQHXAccountAsync(int userID, int flag, string key) {
            this.ConfirmQQHXAccountAsync(userID, flag, key, null);
        }
        
        /// <remarks/>
        public void ConfirmQQHXAccountAsync(int userID, int flag, string key, object userState) {
            if ((this.ConfirmQQHXAccountOperationCompleted == null)) {
                this.ConfirmQQHXAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConfirmQQHXAccountOperationCompleted);
            }
            this.InvokeAsync("ConfirmQQHXAccount", new object[] {
                        userID,
                        flag,
                        key}, this.ConfirmQQHXAccountOperationCompleted, userState);
        }
        
        private void OnConfirmQQHXAccountOperationCompleted(object arg) {
            if ((this.ConfirmQQHXAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConfirmQQHXAccountCompleted(this, new ConfirmQQHXAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://lwservice.passport.21mmo.com/ConfirmQQHXUnBind", RequestNamespace="http://lwservice.passport.21mmo.com/", ResponseNamespace="http://lwservice.passport.21mmo.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result ConfirmQQHXUnBind(int userID, int newUserID, string key) {
            object[] results = this.Invoke("ConfirmQQHXUnBind", new object[] {
                        userID,
                        newUserID,
                        key});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginConfirmQQHXUnBind(int userID, int newUserID, string key, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ConfirmQQHXUnBind", new object[] {
                        userID,
                        newUserID,
                        key}, callback, asyncState);
        }
        
        /// <remarks/>
        public Result EndConfirmQQHXUnBind(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void ConfirmQQHXUnBindAsync(int userID, int newUserID, string key) {
            this.ConfirmQQHXUnBindAsync(userID, newUserID, key, null);
        }
        
        /// <remarks/>
        public void ConfirmQQHXUnBindAsync(int userID, int newUserID, string key, object userState) {
            if ((this.ConfirmQQHXUnBindOperationCompleted == null)) {
                this.ConfirmQQHXUnBindOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConfirmQQHXUnBindOperationCompleted);
            }
            this.InvokeAsync("ConfirmQQHXUnBind", new object[] {
                        userID,
                        newUserID,
                        key}, this.ConfirmQQHXUnBindOperationCompleted, userState);
        }
        
        private void OnConfirmQQHXUnBindOperationCompleted(object arg) {
            if ((this.ConfirmQQHXUnBindCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConfirmQQHXUnBindCompleted(this, new ConfirmQQHXUnBindCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://lwservice.passport.21mmo.com/UnBindQQHXAccount", RequestNamespace="http://lwservice.passport.21mmo.com/", ResponseNamespace="http://lwservice.passport.21mmo.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result UnBindQQHXAccount(int userID, string userName, int newUserID, string qq, int operatorID, string operatorName, string description, string ip, string key) {
            object[] results = this.Invoke("UnBindQQHXAccount", new object[] {
                        userID,
                        userName,
                        newUserID,
                        qq,
                        operatorID,
                        operatorName,
                        description,
                        ip,
                        key});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUnBindQQHXAccount(int userID, string userName, int newUserID, string qq, int operatorID, string operatorName, string description, string ip, string key, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UnBindQQHXAccount", new object[] {
                        userID,
                        userName,
                        newUserID,
                        qq,
                        operatorID,
                        operatorName,
                        description,
                        ip,
                        key}, callback, asyncState);
        }
        
        /// <remarks/>
        public Result EndUnBindQQHXAccount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void UnBindQQHXAccountAsync(int userID, string userName, int newUserID, string qq, int operatorID, string operatorName, string description, string ip, string key) {
            this.UnBindQQHXAccountAsync(userID, userName, newUserID, qq, operatorID, operatorName, description, ip, key, null);
        }
        
        /// <remarks/>
        public void UnBindQQHXAccountAsync(int userID, string userName, int newUserID, string qq, int operatorID, string operatorName, string description, string ip, string key, object userState) {
            if ((this.UnBindQQHXAccountOperationCompleted == null)) {
                this.UnBindQQHXAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnBindQQHXAccountOperationCompleted);
            }
            this.InvokeAsync("UnBindQQHXAccount", new object[] {
                        userID,
                        userName,
                        newUserID,
                        qq,
                        operatorID,
                        operatorName,
                        description,
                        ip,
                        key}, this.UnBindQQHXAccountOperationCompleted, userState);
        }
        
        private void OnUnBindQQHXAccountOperationCompleted(object arg) {
            if ((this.UnBindQQHXAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnBindQQHXAccountCompleted(this, new UnBindQQHXAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://lwservice.passport.21mmo.com/GetQQHXAccountStatus", RequestNamespace="http://lwservice.passport.21mmo.com/", ResponseNamespace="http://lwservice.passport.21mmo.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result GetQQHXAccountStatus(int userID, string key) {
            object[] results = this.Invoke("GetQQHXAccountStatus", new object[] {
                        userID,
                        key});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetQQHXAccountStatus(int userID, string key, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetQQHXAccountStatus", new object[] {
                        userID,
                        key}, callback, asyncState);
        }
        
        /// <remarks/>
        public Result EndGetQQHXAccountStatus(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void GetQQHXAccountStatusAsync(int userID, string key) {
            this.GetQQHXAccountStatusAsync(userID, key, null);
        }
        
        /// <remarks/>
        public void GetQQHXAccountStatusAsync(int userID, string key, object userState) {
            if ((this.GetQQHXAccountStatusOperationCompleted == null)) {
                this.GetQQHXAccountStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetQQHXAccountStatusOperationCompleted);
            }
            this.InvokeAsync("GetQQHXAccountStatus", new object[] {
                        userID,
                        key}, this.GetQQHXAccountStatusOperationCompleted, userState);
        }
        
        private void OnGetQQHXAccountStatusOperationCompleted(object arg) {
            if ((this.GetQQHXAccountStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetQQHXAccountStatusCompleted(this, new GetQQHXAccountStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://lwservice.passport.21mmo.com/CheckUserName", RequestNamespace="http://lwservice.passport.21mmo.com/", ResponseNamespace="http://lwservice.passport.21mmo.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result CheckUserName(string userName) {
            object[] results = this.Invoke("CheckUserName", new object[] {
                        userName});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCheckUserName(string userName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CheckUserName", new object[] {
                        userName}, callback, asyncState);
        }
        
        /// <remarks/>
        public Result EndCheckUserName(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void CheckUserNameAsync(string userName) {
            this.CheckUserNameAsync(userName, null);
        }
        
        /// <remarks/>
        public void CheckUserNameAsync(string userName, object userState) {
            if ((this.CheckUserNameOperationCompleted == null)) {
                this.CheckUserNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckUserNameOperationCompleted);
            }
            this.InvokeAsync("CheckUserName", new object[] {
                        userName}, this.CheckUserNameOperationCompleted, userState);
        }
        
        private void OnCheckUserNameOperationCompleted(object arg) {
            if ((this.CheckUserNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckUserNameCompleted(this, new CheckUserNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://lwservice.passport.21mmo.com/CheckSafeCode", RequestNamespace="http://lwservice.passport.21mmo.com/", ResponseNamespace="http://lwservice.passport.21mmo.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result CheckSafeCode(int userID, string safeCode, string key) {
            object[] results = this.Invoke("CheckSafeCode", new object[] {
                        userID,
                        safeCode,
                        key});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCheckSafeCode(int userID, string safeCode, string key, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CheckSafeCode", new object[] {
                        userID,
                        safeCode,
                        key}, callback, asyncState);
        }
        
        /// <remarks/>
        public Result EndCheckSafeCode(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void CheckSafeCodeAsync(int userID, string safeCode, string key) {
            this.CheckSafeCodeAsync(userID, safeCode, key, null);
        }
        
        /// <remarks/>
        public void CheckSafeCodeAsync(int userID, string safeCode, string key, object userState) {
            if ((this.CheckSafeCodeOperationCompleted == null)) {
                this.CheckSafeCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckSafeCodeOperationCompleted);
            }
            this.InvokeAsync("CheckSafeCode", new object[] {
                        userID,
                        safeCode,
                        key}, this.CheckSafeCodeOperationCompleted, userState);
        }
        
        private void OnCheckSafeCodeOperationCompleted(object arg) {
            if ((this.CheckSafeCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckSafeCodeCompleted(this, new CheckSafeCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://lwservice.passport.21mmo.com/CheckUserNameAndPassword", RequestNamespace="http://lwservice.passport.21mmo.com/", ResponseNamespace="http://lwservice.passport.21mmo.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result CheckUserNameAndPassword(string username, string password, string key, out int userID) {
            object[] results = this.Invoke("CheckUserNameAndPassword", new object[] {
                        username,
                        password,
                        key});
            userID = ((int)(results[1]));
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCheckUserNameAndPassword(string username, string password, string key, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CheckUserNameAndPassword", new object[] {
                        username,
                        password,
                        key}, callback, asyncState);
        }
        
        /// <remarks/>
        public Result EndCheckUserNameAndPassword(System.IAsyncResult asyncResult, out int userID) {
            object[] results = this.EndInvoke(asyncResult);
            userID = ((int)(results[1]));
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void CheckUserNameAndPasswordAsync(string username, string password, string key) {
            this.CheckUserNameAndPasswordAsync(username, password, key, null);
        }
        
        /// <remarks/>
        public void CheckUserNameAndPasswordAsync(string username, string password, string key, object userState) {
            if ((this.CheckUserNameAndPasswordOperationCompleted == null)) {
                this.CheckUserNameAndPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckUserNameAndPasswordOperationCompleted);
            }
            this.InvokeAsync("CheckUserNameAndPassword", new object[] {
                        username,
                        password,
                        key}, this.CheckUserNameAndPasswordOperationCompleted, userState);
        }
        
        private void OnCheckUserNameAndPasswordOperationCompleted(object arg) {
            if ((this.CheckUserNameAndPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckUserNameAndPasswordCompleted(this, new CheckUserNameAndPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://lwservice.passport.21mmo.com/CheckSafeCodeAndPID", RequestNamespace="http://lwservice.passport.21mmo.com/", ResponseNamespace="http://lwservice.passport.21mmo.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result CheckSafeCodeAndPID(int userID, string safeCode, string idCardNo, string key) {
            object[] results = this.Invoke("CheckSafeCodeAndPID", new object[] {
                        userID,
                        safeCode,
                        idCardNo,
                        key});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCheckSafeCodeAndPID(int userID, string safeCode, string idCardNo, string key, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CheckSafeCodeAndPID", new object[] {
                        userID,
                        safeCode,
                        idCardNo,
                        key}, callback, asyncState);
        }
        
        /// <remarks/>
        public Result EndCheckSafeCodeAndPID(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void CheckSafeCodeAndPIDAsync(int userID, string safeCode, string idCardNo, string key) {
            this.CheckSafeCodeAndPIDAsync(userID, safeCode, idCardNo, key, null);
        }
        
        /// <remarks/>
        public void CheckSafeCodeAndPIDAsync(int userID, string safeCode, string idCardNo, string key, object userState) {
            if ((this.CheckSafeCodeAndPIDOperationCompleted == null)) {
                this.CheckSafeCodeAndPIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckSafeCodeAndPIDOperationCompleted);
            }
            this.InvokeAsync("CheckSafeCodeAndPID", new object[] {
                        userID,
                        safeCode,
                        idCardNo,
                        key}, this.CheckSafeCodeAndPIDOperationCompleted, userState);
        }
        
        private void OnCheckSafeCodeAndPIDOperationCompleted(object arg) {
            if ((this.CheckSafeCodeAndPIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckSafeCodeAndPIDCompleted(this, new CheckSafeCodeAndPIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://lwservice.passport.21mmo.com/")]
    public partial class QuestionResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string question1Field;
        
        private string question2Field;
        
        private string messageField;
        
        private bool successField;
        
        /// <remarks/>
        public string Question1 {
            get {
                return this.question1Field;
            }
            set {
                this.question1Field = value;
                this.RaisePropertyChanged("Question1");
            }
        }
        
        /// <remarks/>
        public string Question2 {
            get {
                return this.question2Field;
            }
            set {
                this.question2Field = value;
                this.RaisePropertyChanged("Question2");
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
                this.RaisePropertyChanged("Message");
            }
        }
        
        /// <remarks/>
        public bool Success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
                this.RaisePropertyChanged("Success");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://lwservice.passport.21mmo.com/")]
    public partial class Result : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string messageField;
        
        private bool successField;
        
        private int returnCodeField;
        
        /// <remarks/>
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
                this.RaisePropertyChanged("Message");
            }
        }
        
        /// <remarks/>
        public bool Success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
                this.RaisePropertyChanged("Success");
            }
        }
        
        /// <remarks/>
        public int ReturnCode {
            get {
                return this.returnCodeField;
            }
            set {
                this.returnCodeField = value;
                this.RaisePropertyChanged("ReturnCode");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://lwservice.passport.21mmo.com/")]
    public partial class GetEmailResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool successField;
        
        private string messageField;
        
        private string emailField;
        
        private int userIDField;
        
        private bool isActivationField;
        
        /// <remarks/>
        public bool Success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
                this.RaisePropertyChanged("Success");
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
                this.RaisePropertyChanged("Message");
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
                this.RaisePropertyChanged("Email");
            }
        }
        
        /// <remarks/>
        public int UserID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
                this.RaisePropertyChanged("UserID");
            }
        }
        
        /// <remarks/>
        public bool IsActivation {
            get {
                return this.isActivationField;
            }
            set {
                this.isActivationField = value;
                this.RaisePropertyChanged("IsActivation");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://lwservice.passport.21mmo.com/")]
    public partial class CheckAnswerResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string messageField;
        
        private bool successField;
        
        /// <remarks/>
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
                this.RaisePropertyChanged("Message");
            }
        }
        
        /// <remarks/>
        public bool Success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
                this.RaisePropertyChanged("Success");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void GetUserQuestionCompletedEventHandler(object sender, GetUserQuestionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserQuestionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserQuestionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public QuestionResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((QuestionResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void CheckUserAnswerCompletedEventHandler(object sender, CheckUserAnswerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckUserAnswerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckUserAnswerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CheckAnswerResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CheckAnswerResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void GetUserSafeEmailCompletedEventHandler(object sender, GetUserSafeEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserSafeEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserSafeEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetEmailResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetEmailResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void GetUserSafeEmailAndCheckCompletedEventHandler(object sender, GetUserSafeEmailAndCheckCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserSafeEmailAndCheckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserSafeEmailAndCheckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetEmailResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetEmailResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void RegisterHX2AccountCompletedEventHandler(object sender, RegisterHX2AccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RegisterHX2AccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RegisterHX2AccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void RegisterQQHXAccountCompletedEventHandler(object sender, RegisterQQHXAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RegisterQQHXAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RegisterQQHXAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void ConfirmQQHXAccountCompletedEventHandler(object sender, ConfirmQQHXAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConfirmQQHXAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConfirmQQHXAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void ConfirmQQHXUnBindCompletedEventHandler(object sender, ConfirmQQHXUnBindCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConfirmQQHXUnBindCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConfirmQQHXUnBindCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void UnBindQQHXAccountCompletedEventHandler(object sender, UnBindQQHXAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UnBindQQHXAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UnBindQQHXAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void GetQQHXAccountStatusCompletedEventHandler(object sender, GetQQHXAccountStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetQQHXAccountStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetQQHXAccountStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void CheckUserNameCompletedEventHandler(object sender, CheckUserNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckUserNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckUserNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void CheckSafeCodeCompletedEventHandler(object sender, CheckSafeCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckSafeCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckSafeCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void CheckUserNameAndPasswordCompletedEventHandler(object sender, CheckUserNameAndPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckUserNameAndPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckUserNameAndPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int userID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void CheckSafeCodeAndPIDCompletedEventHandler(object sender, CheckSafeCodeAndPIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckSafeCodeAndPIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckSafeCodeAndPIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
}
